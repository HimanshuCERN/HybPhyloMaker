%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: HybPhyloMaker_manual1.4.2.pdf
%%Creator: Adobe Acrobat 10.1.13
%%For: TF
%%CreationDate: 6/1/2017, 1:27:45 PM
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.3201 841.9200
%%CropBox: 0 0 595.3201 841.9200
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1313 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:ModifyDate="2017-05-31T15:49:11+02:00"
   xmp:CreateDate="2017-05-31T15:49:05+02:00"
   xmp:MetadataDate="2017-05-31T15:49:11+02:00"
   xmp:CreatorTool="Acrobat PDFMaker 10.1 for Word"
   xmpMM:DocumentID="uuid:ed48bd73-e0f7-4e95-93d8-87fe2d6bce62"
   xmpMM:InstanceID="uuid:0f251985-4153-4735-81d2-8e536faf3e8d"
   dc:format="application/pdf"
   pdf:Producer="Adobe PDF Library 10.0"
   pdfx:SourceModified="D:20170531134611"
   pdfx:Company=""
   pdfx:AppVersion="14.0000"
   pdfx:DocSecurity="0"
   pdfx:HyperlinksChanged="0"
   pdfx:LinksUpToDate="0"
   pdfx:ScaleCrop="0"
   pdfx:ShareDoc="0">
   <xmpMM:subject>
    <rdf:Seq>
     <rdf:li>10</rdf:li>
    </rdf:Seq>
   </xmpMM:subject>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>TF</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -841.92 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.92 li
595.32 841.92 li
595.32 0 li
cp
clp
false sop
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold Initial
ct_T42Dict begin
-0.492 -0.191 1.238 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /HZPBAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f326e9674f3000000cc000000606376
742026f12f5c0000012c000005f46670676da1ea42ac0000072000000913
676c796696ee47d600004dd800004ed468656164e23dc179000010340000
0036686865610dc00b3e0000106c00000024686d7478ad98a16b00001090
000011846c6f636100d3e8e200002214000011886d617870110002cc0000
339c000000206e616d6576eeedb4000033bc000004f87072657011c2f8a6
000038b400001522676469720000000000000000000000000003042502bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204a00002ef4000207b00000000000000004d53202000200020
fb040600fe0001c4079e02262000009f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014240465f5e5d5c
5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c
3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b0042651582320b00d4423592121
2d2c20204518684420b001602045b04676688a4560442d2c01b10b0a4323
43650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b1
0228453ab10200080d2d2c2045b00325456164b050515845441b2121592d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87
b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b5258
45441b2121592d2c01b005251023208af500b0016023edec2d2c01b00525
1023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0016001
10203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21
210c6423648bb84000622d2c21b08051580c6423648bb82000621bb20040
2f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2c452345602345602345602376
6818b08062202d2cb00426b00426b00425b0042545234520b00326606263
6820b0032661658a2344442d2c2045b0005458b040442045b04061441b21
21592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423
421b2121592d2c4b515820b0032545695358441b2121591b2121592d2c45
b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d2c45
234560442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb0
164358b00326458a586466b01f601b64b020606620581b21b04059b00161
5923586559b02923442310b029e01b2121212121592d2cb0164358b00425
4564b020606620581b21b04059b0016123586559b0292344b00425b00725
082058021b0359b0052510b004252046b0042523423cb0072510b0062520
46b00425b0016023423c2058011b0059b0052510b00425b029e0b0072510
b00625b029e0b00425b00725082058021b0359b00425b003254348b00625
b00325b0016043481b2159212121212121212d2cb0164358b004254564b0
20606620581b21b04059b0016123581b6559b0292344b00525b008250820
58021b0359b0042510b005252046b0042523423cb00425b0072508b00725
10b006252046b00425b0016023423c2058011b0059b0042510b00525b029
e0b02920456544b0072510b00625b029e0b00525b00825082058021b0359
b00525b003254348b00425b0072508b00625b00325b0016043481b215921
2121212121212d2c02b00425202046b004252342b0052508b00325454821
2121212d2c02b0032520b0042508b0022543482121212d2c452320451820
b00050205823652359236820b040505821b04059235865598a60442d2c4b
53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d
2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2cb002
435458b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb0
02435458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c
208a08234b538a4b515a5823381b2121592d2c0020b200400325b0062649
618b3812342d2c014623466023466123201020468a61b8ff80628ab14040
8a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a59
2d2cb012004b014b54422d2cb1020042b123018851b1400188535a58b910
000020885458b202010243604259b12401885158b920000040885458b202
0202436042b12401885458b2022002436042004b014b5258b20208024360
42591bb940000080885458b202040243604259b94000008063b801008854
58b202080243604259b94000010063b80200885458b202100243604259b9
4000020063b80400885458b202400243604259595959592d2c451868234b
51582320452064b04050587c59688a6059442d2cb00016b00225b0022501
b001233e00b002233eb10102060cb00a236542b00b234201b001233f00b0
02233fb10102060cb006236542b0072342b00116012d2c20b82000628a60
23622d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd
1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0042547
60b0062547b0806361b00225b0005558b00325b00725496359b008255800
1b0159b00425b0062549b009255cb009255a58b0092b59b0072546b08063
61b0032520b0005558631b2159612320b0005558b080631b21b08059b059
2bb006255c586959b00425202010b00048233ab0062658001b0159b00526
58b003252f598a12233221212d2cb00625b00a2587b00625b009254ab000
5358b00625b00a251bb00925b0072559b00225b00225070cb005256323b0
0625636020b94000040063535821b00426b00426b00a1bb9400004006365
5158b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0a
b0092eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b0
0525b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821
cd1bed59b00525b0052507b00825b00b254923b00625b0062587b00a2510
b00b25c15920b00051b800522378b00161b00225b00725b0072507b00a25
b00d254961b08062b00525b005250bb00a252338b00625b0062587b00825
b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554
b8ffa723792121212121212121212121212d2c23b0005458b9400000001b
b900004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b0
005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458
b9400000001bb90000400059b05b2b2d2cb00426b00426080db00426b004
26080db05b2b2d00000100000001051f5edcce435f0f3cf5001908000000
0000bbeb7ccc00000000c12af47efc0ffe7309ea079e0001000900020001
00000000000100000600fe0001c40a7bfc0ffe6109ea0001000000000000
00000000000000000461040e0000000000000000000001cf000004d90017
04d9001704d9001704d9001704d9001704d9001704d9001704d9001704d9
001704d9001704d900170634ffd30634ffd3047c008d043c004f043c004f
043c004f043c004f043c004f043c004f050b008d050b008d051d000f051d
000f03e7008d03e7003f03e7008d03e7003f03e7003c03e7004d03e70055
03e7007503e7008d03e7008d03ac008d0519004905190049051900490519
004905190049050c008d050c008d054300100222008d0222ff5a02220026
0222ff440222ff480222ff4e0222ff5b0222ff80022200220222001e04c9
008d02a6000302a6ffaf0460008d0460008d0362008d036200720371008d
0362008d03760015047e008d06fe008d0545008d0545008d0545008d0545
008d0545008d0521008d0569005005690050056900500569005005690050
05690050056900500569005005690050057200500572005006fe00500442
008d0442008d057d00500481008d0481008d0481006a0481008d03c8003f
03c8003f03c8001f03c8002303c8003f03c8003f03f6000c03f6000c03f6
000c03f6000c0539008c0539008c0539008c0539008c0539008c0539008c
0539008c0539008c0539008c0539008c0539008c04bb00160740002b0740
002b0740002b0740002b0740002b04680021042800100428001004280010
042800100428001003d3003303d3003303d3001e03d300330447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a058fffe2058fffe20438008603cb005a03cb005a03cb
005a03cb005a03cb005a03cb005a049100860491008104a6002604a60026
038f0086038f0024038f0086038f0020038f0020038f001d038f0030038f
003f038f0086038f008603580086049c0058049c0058049c0058049c0058
049c0058049c0086049c008604c10034021000860210ff600210001f0210
ff540210ff410210ff530210ff650210ff7b0210001802100016046f0086
026900000269ffa1040500860405008602fc008602fc0085030d008602fc
0086030c002c041500860648008604c7008604c7008604c7008604c70086
04c700860497008604da005504da005504da005504da005504da005504da
005504da005504da005504da005504e4005504e40055062e005503fd0086
03fd008604de005504250086042500860425005a04250086036f0043036f
0043036f0001036f0006036f0043036f0043037b001b037b0008037b001b
037b001b04ac008404ac008404ac008404ac008404ac008404ac008404ac
008404ac008404ac008404ac008404ac00840435001b068a002b068a002b
068a002b068a002b068a002b0404002603cd000b03cd000b03cd000b03cd
000b03cd000b038f003e038f003e038f0016038f003e03f3004703f30047
03f3004703f3004703f3003703f3004703f3004703f3004703f3004703f3
004703f300470633004706330047044b007e03590048035900480359003b
035900480359004803590048077d004807080048060e0048060e0048044b
004b04c6004b048d004b044b004c0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0288001906c2
00190909001904ce001906c2001909090019046f0019046f0019046f0019
046f001904810019048100190481001904810019046f0019046f001906b6
001906b6001906b6001906b6001906c8001906c8001906c8001906c80019
06b6001906b60019046f0019046f001906b60019064d001908950019046f
0019046f001904ea0019046f001906b60019051600190516001905450019
075e001903cb001b03cb001b03cb001b03cb001b03cb001b044b004b044b
004b044b004b044b004b044b004b044b007e044bff9f0461fff901f7006b
01f7ff7801f7001a01f7ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f7
000801f7007e0403006b043a006e020bffdb020bffdb020bff6d03d7007e
03d7007e03d7007e01f7007e01f700320273007e01f7003f021c00140361
007e0682007e044b007e044b007e044b007e044b0063044b007e04faff96
044b007e044d0048044d0048044d0048044d0048044d0048044d0048044d
0048044d0048044d0048045a0048045a004806be0048044b007e044b007e
044b004b02d8007e02d8007e02d8fff202d8005703310049033100490331
ffff03310000033100490331004905d4004905d400490470007f0211007e
02c6001702e8001702c6001702d6001b0510001704af001704af001704af
001704af001704af001704af001704af001704af001704af001704af0017
05400017078a001707280017072800170728001707280017072800170728
001707280017072800170728001707280017044b0079044b0079044b0079
044b0079044b005e044b0079044b0079044b0079044b0079044b0079044b
007903c9001605f6002305f6002305f6002305f6002305f6002303ad0020
03ca001603ca001603ca001603ca001603ca0016032e0045032e0045032e
0003032e004503540066037b005503a5005002bf003602f5005a02440038
02f5003a02c7003a01d0001c029c001802fb005a017a004f0184ffd902c0
005a0176005a046c005a02f9005a02f5003902f5005a02f5003a0200005a
023a003c01fa001c02fb005a02a50019041b002002a9002002a60017023a
0034026700000284000002a000000000fcfe0000fce30268000002840000
02a000000000fcfe0000fce20336000003690000039b00000000fc980000
fc640336000003690000039b00000000fc960000fc6501fc0000038e0000
03920000039600000000fc6b0000fc6803510000030f0000036d00000388
00000000fc890000fc6d031f000003470000036e00000000fca10000fc7a
03140000031c0000032400000000fca80000fc9f029f000002a3000002a8
00000000fce20000fcde02cf000002c2000002b5000003e3000004150000
044500000000fc400000fc0f01e2000001f7000001e2000001e200000000
fd430000fd43026d00660000fd60028600660000fd5502020067022c0000
04d9001704d9ff72047c008d0347008d049f002b03e7008d03e7fe9d03d3
0033050c008d050cfe7a056900500222008d0222fe930222ff4f0460008d
04c0001a06fe008d0545008d03f0004d056900500569ff0f050c008d0442
008d03c2004a03f6000c042800100428fe4d042800100669000004680021
06760077057200490572fef30447000a0447ff760438008603120086040e
0021038f0086038ffeb8038f003e049c0086049cfec704f6005502100086
0210feb00210ff5204050086041e00110648008604c700860393005704da
005504daff47049c008603fd0086037a004e037b001b03cd000b03cdfe87
03cd000b05bb00000404002605d8006e04e1005504e1ff7e04ba004c04ba
004c045d007e0452005203bd000c0443000003a9004703a9004702ea0040
045a007e045a007e045c0050048f0004024a0079024a0000024aff7d024a
ff1d03d7007e03e400000482007e03c500160315003e031e0044044d0048
044d004804a20020043e0064045b00460341004903240002046300740463
007404630073046300280598004205980044039b000905e7007605be004f
05be004f028900000000fd0403f400000000fc360224007d0224007d0224
007d02350036021000540210005404d900170472008e047c008d0375008d
0375008d0379008d0562000a03e7008d03e7003f03e7004c06a9003a03db
003e0537008d0537008d0537008d0222008d0222ff4e02a600030481008d
0481008d0508000a072a000a06fe008d050c008d072c008d056900500569
0050050a008d0442008d043c004f03c8003f03f6000c0461000804610008
04e5001605ca0000046800210543008d0507008d048e004d072d008d076a
008d051d000c0663008d046d008d044f0048044f004f074f008d04980040
0516000c050f000c051a00000447000a041c008804380086032100860321
0086033a008604b6000b038f0086038f0024038f001e05d800310396004a
04b0008604b0008604b00086021000860210ff5302690000040c0086040c
00860461000306480086049c008604da005504d700550497008603fd0086
03cb005a036f0043037b001b03d6001703d60017045a001a054300000404
002604ba00860490008604320051066f008606960086049c001805d70086
0419008603e6005d03ee0055068800860432004a048a001d0490001d0481
000006430003066c008603f30047044200000443000003f5007e02d6007e
02d6007e02f0007e035f003804a80019044b004b0407004a0407004a0407
004a05e50030036a003a0474007e047400700474007e01f7006b01f7ff76
020bffdb03f5007e03f5007e043500140636001205b5004c045d007e065a
007e044d0048044900480446007e044b007e044b007e0359004803310049
031e00090682007e03ca001603ca001603f900160567004203ad0020047f
007e044c007e03e80030061b007e0650007e0477000905b2007e03f5007e
037f003f0380004a0606007e03fc002b046dfff90461fff90441001103a2
000003a2000003a200000000fc950000fc95029b00e6029b009b029b009b
03b5007303b5005303b50053040a0058026900cf02690091035e006d0355
00450210001702350036023500a00223007d05b1007c0210006b02100017
0210006b02100017037b0064037b001b037b0064037b001b02100017037b
001b02c1005802c100a902c1005802c100a9044f0059044f0097044f0059
044f009703700002033f002003cd017003fc01870370001c033f003d0273
003b0273003b03fcfff503fcfff5073e0083073e0083073e0083073e0083
03fcfff903fc00940224007d0224007d027e006b027e00610299009d0299
005702c0003602c000690259006d025900630277009202770065027e006b
027e00610299009d0299005702c0003602c0006903fc008603fc006003fc
006103fc005604c80052045d005703fc001e03fc003901de007903820079
05a30000057600000841000007300000074400000730000006ad009e06ad
009e040e006905c3003205d9004f02bd000003fc002104b6003c040e0020
03fc0049040e00520458004c03fc00a903fc0044040e004c03fc0063044d
0015040e001d03df002d039f005503f8004f039f0054039f000506350039
085e008d03fc001c073f00860437001a04a8004e02de001903f2004f03f0
00430460001e03e9004f0442006603be002f0440004d04420047040e0039
040e0094040e0058040e0055040e001a040e0060040e0054040e0051040e
003d040e00420474005802ad001c03a000510385004d03d30024038a005f
03ce0058035f002503d4003a03dc0046039f0037039f0079039f0050039f
0053039f002d039f0062039f0045039f0047039f0038039f003804a8004e
02de001903f2004f03f000430444001e03e9004f0442006603be002f0440
004d04420047040e0039040e0094040e0058040e0055040e0024040e0060
040e0054040e0051040e003d040e0042032f003d0205001d02b4003e02b0
003802ed002302b2004302e4004b029d002e02ed003c02e4003602d7003b
02d0003a02c7004b01c7004d01c70047032f003d0205001d02b4003e02b0
003802ed002302b2004302e4004b029d002e02ed003c02e4003602d7003b
02d0003a02c7004b01c7004d01c7004702b5002f02050025027000300274
002302750010026a0031027a002a0261001d028b001e026e001b02b5002f
02050025027000300274002302750010026a0031027a002a0261001d028b
001e026e001b02d8ff2e032c003805870038059400380543003805940038
055a00380592003805fa004205fa0042059d003b05eb003b05e8003b0607
002305b1004405e800440570002c05d50039087e0039057c004607ed0046
03fc003403fc003703fc005403fc002203fc005303fc005403fc005103fc
004403fc006603fc004503fc005503fc005603fc002f05e9002c04390022
06b40059044c004c0301000e03fcfffe049f002b057200490482007e0642
00530467005304450036073e0092073e0087073e00b6073e00b606b70076
06b7010806b7007606b701080a7b00920626007d04660028000000000000
013c0000013c0000013c0000013c0000029a0000029a0000029a0000029a
0000029a0000029a0000029a0000029a0000029a0000029a0000029a0000
029a0000029a000003de0000050400000504000005040000050400000504
00000504000005d8000005d8000005d8000005d80000070a0000070a0000
070a0000070a0000070a0000070a0000070a0000070a0000070a0000070a
00000838000009be000009be000009be000009be000009be00000b140000
0b1400000b1400000b8400000b8400000b8400000b8400000b8400000b84
00000b8400000b8400000b8400000b8400000b8400000c5000000c500000
0d4e00000d4e00000dec00000dec00000dec00000dec00000dec00000dec
00000f74000010d8000010d8000010d8000010d8000010d8000010d80000
11be000011be000011be000011be000011be000011be000011be000011be
000011be000011be000011be000011be000012b8000012b8000012b80000
141a0000141a0000141a0000141a00001592000015920000159200001592
000015920000159200001650000016500000165000001650000017240000
172400001724000017240000172400001724000017240000172400001724
000017240000172400001724000018580000185800001858000018580000
18580000197200001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001a4600001a4600001a4600001a4600001a46
00001a4600001a4600001a4600001a4600001a4600001a4600001a460000
1a4600001a4600001a4600001c1e00001c1e00001c1e00001c1e00001c1e
00001c1e00001c1e00001c1e00001c1e00001c1e00001c1e00001c1e0000
1c1e00001d6200001e8e00001e8e00001e8e00001e8e00001e8e00001e8e
00001e8e00001e8e00001e8e00001e8e00001fc600001fc600001fc60000
1fc60000215e0000215e0000215e0000215e0000215e0000215e0000215e
0000215e0000215e0000215e000022720000227200002272000022720000
227200002272000022720000227200002272000022720000227200002272
000022720000227200002272000022720000227200002272000022720000
227200002272000022720000227200002272000022720000227200002272
000022720000227200002272000022720000227200002272000022720000
227200002272000022720000227200002272000022720000247e0000247e
0000247e0000247e0000247e0000247e0000247e0000247e0000247e0000
247e0000257a0000257a0000257a00002624000026240000262400002624
000026240000262400002624000026240000262400002624000026240000
26240000270c0000270c0000270c0000280c0000280c0000280c00002890
000028900000289000002890000028900000289000002a1400002b220000
2b2200002b2200002b2200002b2200002b2200002b2200002c0800002c08
00002c0800002c0800002c0800002c0800002c0800002c0800002c080000
2c0800002c0800002c0800002d4c00002d4c00002e8e00002f8c00002f8c
00002f8c00002f8c00003132000031320000313200003132000031320000
313200003132000031320000313200003132000032600000326000003260
000032600000326000003260000032600000326000003260000032600000
326000003260000032600000326000003260000032600000326000003260
000032600000326000003260000032600000326000003260000032600000
326000003260000033580000335800003358000033580000335800003358
0000335800003358000033580000335800003358000034380000359e0000
359e0000359e0000359e0000359e000036c0000037a0000037a0000037a0
000037a0000037a0000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c4000038c4000038c40000
38c4000038c4000038c4000038c4000038c4000038c4000038c4000038c4
000038c4000038c4000038c4000038c4000038c400003930000039300000
39c0000039f6000039f600003a6000003acc00003acc00003acc00003acc
00003acc00003acc00003acc00003acc00003acc00003acc00003acc0000
3acc00003acc00003acc00003acc00003acc00003acc00003b2e00003b2e
00003b2e00003b2e00003b2e00003b2e00003b7800003b7800003b780000
3b7800003b7800003b7800003b7800003b7800003bba00003bba00003bba
00003bba00003c4a00003cda00003cda00003cda00003cda00003cda0000
3cda00003cda00003cda00003cda00003cda00003cda00003cda00003cda
00003cda00003cda00003cda00003cda00003cda00003cda00003cda0000
3cda00003cda00003cda00003cda00003cda00003ea800003ea800003ea8
00003ea800003ea800003ea800003ea800003ea800003ea800003ea80000
3ea800003ea800003ea800003ea800003ea800003ea800003ea800003ea8
00003ea800003ea800003ea800003ea800003ea800003ea800003ea80000
3ea800003ea800003ea800003ea800003ea800003ea800003ea800003ea8
00003ea800003ea800003ea800003ea800003ea800003ea800003ea80000
3ea800003ea800003ea800003ea800003ea800003ea800003ea800003ea8
00003ea800003ea800004050000040500000423a0000423a0000423a0000
423a0000423a0000423a0000423a0000423a0000423a0000423a0000423a
0000423a0000423a0000423a0000423a0000423a0000423a0000423a0000
423a0000423a0000423a0000423a0000423a0000423a0000423a0000423a
0000423a0000423a0000423a0000423a0000423a0000423a0000437e0000
44ba000046760000489a00004a1a00004bac00004bbc00004cc000004cd0
00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e0000
4e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e
00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e0000
4e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e
00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e0000
4e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e
00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e0000
4e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e
00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e0000
4e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e00004e5e
00004e5e00004ed400004ed400004ed400004ed400004ed400004ed40000
4ed400004ed400004ed400004ed400004ed400004ed400004ed400004ed4
00004ed400004ed400004ed400004ed400004ed400004ed400004ed40000
4ed400004ed400004ed400004ed400004ed400004ed400004ed400004ed4
00004ed400004ed400004ed400010000046100ad000700ac000700020010
002f006000000c1c0141000400010000000e00ae00000003000000000064
0000000000030000000700fa006400010000000000000032015e00010000
00000003001301900001000000000004001301a300010000000000060013
01b60001000000000007007d01c900030001040900000064024600030001
04090001002602aa0003000104090002000e02d000030001040900030026
02de00030001040900040026030400030001040900060026032a00030001
0409000700fa035000a9002000320030003000360020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064002e00430061006c006900620072
006900200069007300200065006900740068006500720020006100200072
006500670069007300740065007200650064002000740072006100640065
006d00610072006b0020006f007200200061002000740072006100640065
006d00610072006b0020006f00660020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e0020
0069006e002000740068006500200055006e006900740065006400200053
0074006100740065007300200061006e0064002f006f00720020006f0074
00680065007200200063006f0075006e00740072006900650073002ea920
32303036204d6963726f736f667420436f72706f726174696f6e2e20416c
6c205269676874732052657365727665642e494f59444a492b43616c6962
72692d426f6c64494f59444a492b43616c696272692d426f6c64494f5944
4a492b43616c696272692d426f6c6443616c696272692069732065697468
6572206120726567697374657265642074726164656d61726b206f722061
2074726164656d61726b206f66204d6963726f736f667420436f72706f72
6174696f6e20696e2074686520556e697465642053746174657320616e64
2f6f72206f7468657220636f756e74726965732e00a90020003200300030
00360020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064002e
0049004f00590044004a0049002b00430061006c0069006200720069002d
0042006f006c00640052006500670075006c006100720049004f00590044
004a0049002b00430061006c0069006200720069002d0042006f006c0064
0049004f00590044004a0049002b00430061006c0069006200720069002d
0042006f006c00640049004f00590044004a0049002b00430061006c0069
006200720069002d0042006f006c006400430061006c0069006200720069
002000690073002000650069007400680065007200200061002000720065
00670069007300740065007200650064002000740072006100640065006d
00610072006b0020006f007200200061002000740072006100640065006d
00610072006b0020006f00660020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e00200069
006e002000740068006500200055006e0069007400650064002000530074
006100740065007300200061006e0064002f006f00720020006f00740068
0065007200200063006f0075006e00740072006900650073002eb10903b8
02f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5
b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e
2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1f
b802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802
e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b2
1e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d19
1fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb8
02dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7
b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d
2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1f
b802ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802
cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b2
1d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f
1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb8
02bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9
b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d
2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321f
b802b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802
acb21c331fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b2
1c321fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c32
1fb802a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8
029fb21c331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029b
b21c311fb8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c
321fb80296b21c321fb80295b21c331fb80294b21c331fb80293b21c331f
b80292b21c331fb80291b21c331fb80290b21c331fb8028fb21c331fb802
8eb21c311fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab2
1c321fb80289b21c321fb80288b21c331fb80287b21c331fb80286b21c33
1fb80285b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb8
0281b21b341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027d
b21b341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b
341fb80278b21b341fb80277b21b341fb80276b21b341fb80275b21b341f
b80274b21b341fb80273b21b341fb80272b21b341fb80271b21b341fb802
70b21b341fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb2
1a351fb8026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a35
1fb80267b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb8
0263b21a351fb80262b21a351fb80261b21a351fb80260b21a351fb8025f
b21a351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a
351fb8025ab21a351fb80259b219371fb80258b219371fb80257b219371f
b80256b219371fb80255b219371fb80254b219371fb80253b219371fb802
52b219371fb80251b219371fb80250b219371fb8024fb219371fb8024eb2
19371fb8024db219371fb8024cb219371fb8024bb219371fb8024ab21937
1fb80249b219371fb80248b219371fb80247b219371fb80246b219371fb8
0245b219371fb80244b219371fb80243b219371fb80242b219371fb80241
b219371fb80240b219371fb8023fb219371fb8023eb219371fb8023db219
371fb8023cb219371fb8023bb219371fb8023ab219371fb80239b218391f
b80238b218391fb80237b218391fb80236b218391fb80235b218391fb802
34b218391fb80233b218391fb80232b218391fb80231b218391fb80230b2
18391fb8022fb218391fb8022eb218391fb8022db218391fb8022cb21839
1fb8022bb218391fb8022ab218391fb80229b218391fb80228b218391fb8
0227b218391fb80226b218391fb80225b2173b1fb80224b2173b1fb80223
b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb8021fb217
3b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2173b1f
b8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b1fb802
16b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb80212b2
173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020eb2173b
1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab2173b1fb8
0209b217321fb80208b217321fb80207b2173b1fb80206b2173b1fb80205
b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb80201b217
3b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2173b1f
b801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b1fb801
f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb801f4b2
173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0b2173b
1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb2173b1fb8
01ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1fb801e7
b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801e3b216
371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb216441f
b801deb216441fb801ddb216441fb801dcb216451fb801dbb216461fb801
dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb801d6b2
16381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2b21644
1fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216461fb8
01cdb216461fb801ccb216461fb801cbb216431fb801cab216231fb801c9
b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801c5b216
421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b216461f
b801c0b216461fb801bfb216461fb801beb216461fb801bdb216461fb801
bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb801b8b2
16421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4b21644
1fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216451fb8
01afb216451fb801aeb216461fb801adb216461fb801acb216461fb801ab
b216461fb801aab216461fb801a9b215341fb801a8b215411fb801a7b215
411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b215521f
b801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f1fb801
9eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8019ab2
154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196b21550
1fb80195b215521fb80194b215521fb80193b215521fb80192b215411fb8
0191b2154f1fb80190b215501fb8018fb215501fb8018eb215511fb8018d
b215521fb8018cb215521fb8018bb215521fb8018ab214581fb80189b214
591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2145b1f
b80184b2145c1fb80183b214591fb80182b2145d1fb8018140af145d1ff0
0f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fb20b56
1fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b561faa
0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561fa30b56
1fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a681f98
0a681f970a681f960a681f950a681f940a681f930a681f920a681f910a68
1f9009681f8f09681f8e09681f8d09681f8c09681fb8017fb213321fb801
7eb212371fb80174b212371fb80173b211421fb80172b211421fb80171b2
11421fb80170b211421fb8016fb211421fb8016eb211421fb8016db21142
1fb8016cb211421fb8016bb211421fb8016ab211421fb8013cb211421fb8
013bb210421fb8013ab210421fb80139b210421fb80138b210421fb80137
b210421fb80136b210421fb80135b210421fb80134b210421fb80133b210
421fb80132b20f451fb80131b20f451fb80130b20f451fb80112b20f451f
b80111b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb801
0db20e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb80109b2
0e481fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed
0d4a1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e
1fdc0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd
0b561fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321f
b8017ab211401fb80179b211421fb80178b211421fb80177b211421fb801
76b211421fb80175b211421fb80143b211421fb80142b210421fb80141b2
10421fb80140b210421fb8013fb210421fb8013eb210421fb8013db20f45
1fb80115b20f451fb80114b20f451fb80113b20f451fb8017bb213321fb8
0153b212371fb80152b211401fb80151b211401fb80150b211401fb8014f
b211401fb8014eb211401fb8014db211401fb8014cb211401fb8014bb211
401fb8014ab211401fb80149b211401fb80148b211401fb80147b211401f
b80146b211401fb80145b211401fb80144b211401fb80122b211401fb801
21b210421fb80120b210421fb8011fb210421fb8011eb210421fb8011db2
10421fb8011cb210421fb8011bb210421fb8011ab210421fb80119b21042
1fb80118b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f45
1ffb0f451ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff4
0e481ff30d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a
1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc9
0c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e
1fb70b561fb60b561fb50b561fb40b561fb30b561f9b0a681fb8017db212
371fb8017cb212371fb80169b2112e1fb80168b2112e1fb80167b211401f
b80166b211401fb80165b211401fb80164b211401fb80163b211401fb801
62b211401fb80161b211401fb80160b211401fb8015fb211401fb8015eb2
11401fb8015db211401fb8015cb211401fb8015bb211401fb8015ab21140
1fb80159b211401fb80158b211401fb80157b211401fb80156b211401fb8
0155b211401fb80154b211401fb8012fb211401fb8012eb210421fb8012d
b210421fb8012cb210421fb8012bb210421fb8012ab210421fb80129b210
421fb80128b210421fb80127b210421fb80126b210421fb80125b20f451f
b80124b20f451fb80123b20f451fb80105b20f451fb80104b20f451fb801
03b20f451fb80102b20f451fb80101b20e481fb8010040a20e481fff0e48
1ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd1
0c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e
1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d
7b7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab77550b
77010c764875555475e475f4750314755475647574759475d475e47507a4
75b475c47503b8ffc0401275383b46807590750214757475020075010fb8
ffc04021750b0e467448725573ab725504723472023be47201d072010220
72014072507202b8ffc0b372242846b8ffc040ff72161a46007220723072
0371486f5570ab6f556e486d55cf6d016b032e1f6a03251f692e675568ab
6755662e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a55
5bab5a55592e58555703251f562e545555ab5455532e515552ab51554f2e
4e554e03251f4d2e4b554cab4b554a2e485549ab4855504801472e465545
03361f001f01001e01001e701e801ef01e040b601d701d02701de01df01d
03701cf01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f19
8f199f19af19050f198f199f19030c7012801202701180110230114011d0
11e011040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af
0ebf0ecf0e4060034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d
1f0d2f0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c
5f0c039f0c01400c262946ef0aff0a02400a242746ef09ff0902ff090100
03012001010001100120010308b8ffc0b401151f4603bc01000100000500
010190b154532b2b4bb807ff524bb009505bb00188b02553b00188b04051
5ab00688b000555a5b58b101018e59b101024354b0144b515a58b101018e
59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340401d42
594bb0ff5358b20300001d42592b5e73757373742b732b73742b2b73745e
732b5e7374757374755e73747573015e7374737475757473745e73747300
2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b
2b732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b
2b73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b185f5e000000>
[16041 4141 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HZPBAA+Calibri-Bold AddT42Char 
2 1238 1005 <00010094000003b00517002e00b5b10102435558400d0929010928010827
0101120130b8ffc040090f024d403001030029b80292b31e180b11b8ffde
b50f024d111312b8017d40092352290f10010b0510b8012bb24006540018
3f1a4ded5f5e5d323ffdcd012f2bcdc433fdcd31305f5d2b005d015d5d5d
1b4018292801292901092901092801082701011201403001031312b8017d
40092352290f10010b0510b8012bb240065400183f1a4ded5f5e5d323ffd
cd3130015f5d005d015d5d5d5d5d5925140e022321222e0235343e023333
11070606262635343e0237253e0333321e02151133321e0203b0060b0e09
fd36080e0b06050b0e09f1d0171d110602080e0c0116050f18271f262f18
08d3090f0b05641c27170a0a17271c1d27180b034a730b05112a26181f16
0e08b40405030103070c09fbd30b1827>HZPBAA+Calibri-Bold AddT42Char 
1 14640 855 <000200a0fff301ba03af00130027001bb10014b802b8b70a1e23194c050f
48003fcd3fcd012f33ed32313001140e0223222e0235343e0233321e0211
140e0223222e0235343e0233321e0201ba0e2136292936210c0c21362929
36210e0e2136292936210c0c2136292936210e03162a38240f0f24382a2b
3a241010243afd482a39240f0f24392a2a3b240f0f243b00>HZPBAA+Calibri-Bold AddT42Char 
1 316 4 <00020017fffa04c305140022002600e1b10102435558b90024ffe8b40b0f
014c23b8ffe8401e0b0f014c250c0d23180d0016010e16260b0a23220a00
2004230111232625b8012a401e400b000c0112030c0c271d2423231e0a0d
160023221807121d521255055500183f3f3f1217393811331112392f5f5e
5d331a4ded3201192f5e5d1a18cd32337d87c4c40118c45e5d32337d87c4
c43130002b2b1bb90024ffe8b40b0f014c23b8ffe8b50b0f014c2625b801
2a401e400b000c0112030c0c271d2423231e0a0d160023221807121d5212
55055500183f3f3f1217393811331112392f5f5e5d331a4ded3231302b2b
59251616060623222e02270321070e03232226263637013e0333321e0217
0723032104b10c0616383133391e0c0457fe1a52040d1d352b2e3414060c
018f0610233e333b46271106c201b7016f62242a15050309100d0104fd0e
130b0406172a23047c11150b03030b1613c6fdda>HZPBAA+Calibri-Bold AddT42Char 
1 7822 282 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>HZPBAA+Calibri-Bold AddT42Char 
1 8134 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>HZPBAA+Calibri-Bold AddT42Char 
1 9594 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>HZPBAA+Calibri-Bold AddT42Char 
1 10772 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>HZPBAA+Calibri-Bold AddT42Char 
1 11272 393 <0002007efe95040003d7002a003d0096b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022711140e0223
222e023511343e0233321e0215153e0333321e0205342e0223220e020711
161633323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e
29190a274b4e532f628a5728fefa11294332193133361e35603431452c15
01ed77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a
69283d29144d86b277396952310f223628feda4349325166>HZPBAA+Calibri-Bold AddT42Char 
1 13726 454 <00010020fffa038d03c6002f008cb10102435558bc0022028a0018002402
2a40092e182e182e00170b0cb80261400f400016010e03160b202f002323
0b0ab802b5400f4000200b2949230b111d49114c054c00183f3f3f123939
3f01192f1a18dd1a4ded1239192f12391a1810dd5f5e5d1aed1239123939
2f2f10ed10ed31301b400b2949230b111d49114c054c00183f3f3f123939
3f31305925160e0223222e022703030e0323222e02371303262636363332
1e021713133e0333321616060703038508011c3a302d371f0f04a5a5040e
1d342a2c34180109f7e409011a39312c351e0e059f9e030c1a2d272c3517
010bde3411160e0503090d0a013dfec30a0d0903050e161101b7019c1219
0e0603060d0afed6012a080c0804040e1914fe6b>HZPBAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>HZPBAA+Calibri-Bold AddT42Char 
HZPBAA+Calibri-Bold /CharStrings get begin
/space 3 def
/one 1005 def
/colon 855 def
/A 4 def
/d 282 def
/e 286 def
/i 349 def
/n 374 def
/p 393 def
/x 454 def
end
HZPBAA+Calibri-Bold /Encoding get
dup 32 /space put
dup 49 /one put
dup 58 /colon put
dup 65 /A put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 112 /p put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold /HZPBAA+Calibri-Bold findfont ct_VMDictPut
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
34{/.notdef}rp /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /.notdef 
/p 7{/.notdef}rp /x 135{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [11.04 0 0 -11.04 0 0 ]msf
72 52.92 mo
(Appendix 1: )
[6.72339 5.88435 5.88435 5.52007 5.88435 5.88435 2.76003 5.03423 2.5171 5.64148 3.00289 0 
]xsh
%ADOBeginSubsetFont: RYGAAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /RYGAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c79667cefd1e500005bac0000613268656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f636100e9e51c00002134000011886d6178702801030d0000
32bc000000206e616d658cc47f36000032dc000004c170726570ffeae6e0
000037a00000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051fa6cfd0115f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
0000025e0000025e0000025e0000025e0000025e0000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e000003ca000004c4
000004c4000004c4000004c4000004c4000004c40000059e0000059e0000
059e0000059e000006960000069600000696000006960000069600000696
0000069600000696000006960000069600000768000008b6000008b60000
08b6000008b6000008b6000009f6000009f6000009f600000a8c00000a8c
00000a8c00000a8c00000a8c00000a8c00000a8c00000a8c00000a8c0000
0a8c00000a8c00000b5600000b5600000c5400000c5400000cf000000cf0
00000cf000000cf000000cf000000cf000000e4a00000f8000000f800000
0f8000000f8000000f8000000f8000001070000010700000107000001070
000010700000107000001070000010700000107000001070000010700000
1070000011620000116200001298000013ee000013ee000013ee000013ee
000015920000159200001592000015920000159200001592000016600000
166000001660000016600000177600001776000017760000177600001776
0000177600001776000017760000177600001776000017760000185a0000
197c0000197c0000197c0000197c0000197c00001a4c00001b2c00001b2c
00001b2c00001b2c00001b2c00001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001bc4
00001bc400001bc400001bc400001bc400001bc400001bc400001bc40000
1bc400001bc400001bc400001bc400001bc400001bc400001bc400001d22
00001d2200001d3a00001d3a00001d3a00001d3a00001d3a00001d3a0000
1d3a00001d3a00001d3a00001d3a00001d3a00001e6c00001f8400001f84
00001f8400001f8400001f8400001f8400001f8400001f8400001f840000
1f84000020b2000020b2000020b2000020b2000021f4000021f40000220c
0000220c0000220c0000220c0000220c0000220c0000220c0000220c0000
231200002312000023120000231200002312000023120000231200002312
000023120000231200002312000023120000231200002312000023120000
231200002312000023120000231200002312000023120000231200002312
000023120000231200002312000023120000231200002312000023120000
231200002312000023120000231200002312000023120000231200002312
0000231200002312000024ec000024ec000024ec000024ec000024ec0000
24ec000024ec000024ec000024ec000024ec000025f4000025f4000025f4
000026e6000026e6000026fc000026fc000026fc000026fc000026fc0000
26fc000026fc000027540000275400002754000028620000286200002862
00002996000029960000299600002a1c00002a1c00002a1c00002a1c0000
2a1c00002a1c00002bde00002d0000002d0000002d0000002d0000002d00
00002d0000002d0000002e1c00002e1c00002e3400002e3400002e340000
2e3400002e3400002e3400002e3400002e3400002e3400002e3400002f62
00002f620000309400003186000031860000318600003186000033120000
331200003312000033280000332800003328000033280000332800003328
000033280000342000003420000034200000342000003420000034200000
342000003420000034200000342000003420000034200000342000003420
000034200000342000003420000034200000342000003420000034200000
342000003420000034200000342000003420000034200000354000003540
000035400000354000003540000035580000355800003558000035580000
355800003558000036c60000387600003876000038760000387600003876
0000399200003a5c00003a5c00003a5c00003a5c00003a5c00003b1a0000
3b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a
00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a0000
3b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a
00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a0000
3b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b1a00003b84
00003b8400003b8400003b8400003b8400003b8400003b8400003b840000
3b8400003b8400003c2c00003c2c00003c2c00003c2c00003c2c00003c2c
00003c2c00003c2c00003c2c00003c2c00003c2c00003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003ca400003ca4
00003ca400003ca400003ca400003ca400003ca400003ca400003ca40000
3ca400003ca400003ca400003ca400003ca400003ca400003d2e00003d2e
00003d2e00003e1c00003e1c00003e1c00003e1c00003e1c00003e1c0000
3e1c00003e1c00003e7e00003f2a00003fba00003ffe00004094000040f4
00004156000041560000415600004204000042b4000042b4000042b40000
42b4000042b4000042b4000042b4000042b4000042b4000042b4000042b4
000042b4000042b400004304000043040000430400004304000043040000
43040000434a0000434a0000439400004394000043940000439400004394
00004394000043d6000043d6000043d6000043d600004468000045080000
4576000045e0000046d4000047cc000047cc000047cc000047cc000047cc
000047cc000047cc000047cc000047cc000047cc000047cc000048840000
4884000048840000488400004884000048840000488400004884000048d6
0000496200004ae400004ae400004ae400004ca800004ca800004ca80000
4dda00004dda00004dda00004dda00004dda00004dda00004dda00004dda
00004dda00004dda00004dda00004dda00004dda00004dda00004dda0000
4dda00004dda00004dda00004dda00004dda00004dda00004dda00004dda
00004dda00004dda00004dda00004dda00004dda00004dda00004dda0000
4dda00004dda00004dda00004dda00004dda00004dda00004dda00004dda
00004dda00004dda00004dda00004dda00004dda00004dda00004f360000
4f3600005182000051820000518200005182000051820000518200005182
000051820000518200005182000051820000518200005182000051820000
518200005182000051820000518200005182000051820000518200005182
000051820000518200005182000051820000518200005182000051820000
51820000518200005182000052e800005456000055960000577e00005908
00005a7200005a8200005bc000005bd000005d4200005d4200005d420000
5d4200005d4200005d4200005d4200005d4200005d4200005d4200005d42
00005d4200005d4200005d4200005d4200005d4200005d4200005d420000
5d4200005d4200005d4200005d4200005d4200005d4200005d4200005d42
00005d4200005d4200005d4200005d4200005d4200005dd800005dd80000
5dd800005dd800005dd800005dd800005dd800005dd800005dd800005dd8
00005dd800005dd800005dd800005dd800005dd800005dd800005dd80000
5dd800005dd800005dd800005e4c00005e4c00005e4c00005e4c00005e4c
00005e4c00005e4c00005e4c00005e4c00005e4c00005e4c00005e4c0000
5e4c00005e4c00005e4c00005e4c00005e4c00005e6e00005e6e00005e6e
00005e6e00005f0c00005f0c00005fcc00005fcc00006042000060420000
6042000060b6000061320000613200006132000061320000613200006132
000061320000613200006132000061320000613200006132000061320000
613200006132000061320000613200006132000061320000613200006132
000061320000613200006132000061320000613200006132000061320001
0000046100ad000700ac000700020010002f006500002318018200040001
0000000e00ae000000030000000000640000000000030000000700fa0064
00010000000000000032015e0001000000000003000e0190000100000000
0004000e019e0001000000000006000e01ac0001000000000007007d01ba
0003000104090000006402370003000104090001001c029b000300010409
0002000e02b70003000104090003001c02c50003000104090004001c02e1
0003000104090006001c02fd000300010409000700fa031900a900200032
0030003000360020004d006900630072006f0073006f0066007400200043
006f00720070006f0072006100740069006f006e002e00200041006c006c
002000520069006700680074007300200052006500730065007200760065
0064002e00430061006c0069006200720069002000690073002000650069
007400680065007200200061002000720065006700690073007400650072
00650064002000740072006100640065006d00610072006b0020006f0072
00200061002000740072006100640065006d00610072006b0020006f0066
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea92032303036204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e5450474d484d2b43616c696272695450474d484d2b43616c6962
72695450474d484d2b43616c6962726943616c6962726920697320656974
686572206120726567697374657265642074726164656d61726b206f7220
612074726164656d61726b206f66204d6963726f736f667420436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e00a900200032003000
3000360020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e005400500047004d0048004d002b00430061006c006900620072006900
52006500670075006c00610072005400500047004d0048004d002b004300
61006c0069006200720069005400500047004d0048004d002b0043006100
6c0069006200720069005400500047004d0048004d002b00430061006c00
6900620072006900430061006c0069006200720069002000690073002000
650069007400680065007200200061002000720065006700690073007400
65007200650064002000740072006100640065006d00610072006b002000
6f007200200061002000740072006100640065006d00610072006b002000
6f00660020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e00200069006e00200074006800
6500200055006e0069007400650064002000530074006100740065007300
200061006e0064002f006f00720020006f00740068006500720020006300
6f0075006e00740072006900650073002e000000b2090320b80284b40918
014a20b80283b40918014a20b80282b40918014a20b80281b40918014a20
b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8027d
b40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab40918
014a20b80279b40918014a20b80278b40918014a20b80277b40918014a20
b80276b40918014a20b80275b40918014a20b80274b40918014a20b80273
b40918014a20b80271b40918014a20b80270b40918014a20b8026fb40918
014a20b8026eb40918014a20b8026db40918014a20b8026cb40918014a20
b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b80268
b40918014a20b80267b40918014a20b80266b40918014a20b80265b40918
014a20b80264b40918014a20b80263b40918014a20b80262b40918014a20
b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8025e
b40918014a20b8025db40918014a20b8025cb40918014a20b8025bb40918
014a20b8025ab40918014a20b80259b40918014a20b80258b40918014a20
b80257b40918014a20b80256b40918014a20b80255b40918014a20b80254
b40918014a20b80253b40918014a20b80252b40918014a20b80251b40918
014a20b80250b40918014a20b8024fb40918014a20b8024eb40918014a20
b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8024a
b40918014a20b80249b40918014a20b80248b40918014a20b80247b40918
014a20b80246b40918014a20b80245b40918014a20b80244b40918014a20
b80243b40918014a20b80242b40918014a20b80241b40918014a20b80240
b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db40918
014a20b8023cb40918014a20b8023bb40918014a20b8023ab40918014a20
b80239b40918014a20b80238b40918014a20b80237b40918014a20b80236
b40918014a20b80235b40918014a20b80234b40918014a20b80233b40918
014a20b80232b40918014a20b80231b40918014a20b80230b40918014a20
b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8022c
b40918014a20b8022bb40918014a20b8022ab40918014a20b80229b40918
014a20b80228b40918014a20b80227b40918014a20b80226b40918014a20
b80225b40918014a20b80224b40918014a20b80223b40918014a20b80222
b40918014a20b80221b40918014a20b80220b40918014a20b8021fb40918
014a20b8021eb40918014a20b8021db40918014a20b8021cb40918014a20
b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b80218
b40918014a20b80217b40918014a20b80216b40918014a20b80215b40918
014a20b80214b40918014a20b80213b40918014a20b80212b40918014a20
b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8020e
b40918014a20b8020db40918014a20b8020cb40918014a20b8020bb40918
014a20b8020ab40918014a20b80209b40918014a20b80208b40918014a20
b80207b40918014a20b80206b40918014a20b80205b40918014a20b80204
b40918014a20b80203b40918014a20b80202b40918014a20b80201b40918
014a20b80200b40918014a20b801ffb40918014a20b801feb40918014a20
b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b801fa
b40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b40918
014a20b801f6b40918014a20b801f5b40918014a20b801f4b40918014a20
b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b801f0
b40918014a20b801efb40918014a20b801eeb40918014a20b801edb40918
014a20b801ecb40918014a20b801ebb40918014a20b801eab40918014a20
b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b801e6
b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b40918
014a20b801e2b40918014a20b801e1b40918014a20b801e0b40918014a20
b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b801dc
b40918014a20b801dbb40918014a20b801dab40918014a20b801d9b40918
014a20b801d8b40918014a20b801d7b40918014a20b801d6b40918014a20
b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b801d2
b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb40918
014a20b801ceb40918014a20b801cdb40918014a20b801ccb40918014a20
b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b801c8
b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b40918
014a20b801c4b40918014a20b801c3b40918014a20b801c2b40918014a20
b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b801be
b40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb40918
014a20b801bab40918014a20b801b9b40918014a20b801b8b40918014a20
b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b801b4
b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b40918
014a20b801b0b40918014a20b801afb40918014a20b801aeb40918014a20
b801adb40918014a20b801acb40918014a20b801abb40918014a20b801aa
b40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b40918
014a20b801a6b40918014a20b801a5b40918014a20b801a4b40918014a20
b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b801a0
b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db40918
014a20b8019cb40918014a20b8019bb40918014a20b8019ab40918014a20
b80199b40918014a20b80198b40918014a20b80197b40918014a20b80196
b40918014a20b80195b40918014a20b80194b40918014a20b80193b40918
014a20b80192b40918014a20b80191b40918014a20b80190b40918014a20
b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8018c
b40918014a20b8018bb40918014a20b8018ab40918014a20b80189b40918
014a20b80188b40918014a20b80187b40918014a20b80186b40918014a20
b80185b40918014a20b80184b40918014a20b80183b40918014a20b80182
b40918014a20b80181b40918014a20b80180b40918014a20b8017fb40918
014a20b8017eb40918014a20b8017db40918014a20b8017cb40918014a20
b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b80178
b40918014a20b80177b40918014a20b80176b40918014a20b80175b40918
014a20b80174b40918014a20b80173b40918014a20b80172b40918014a20
b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8016e
b40918014a20b8016db40918014a20b8016cb40918014a20b8016bb40918
014a20b8016ab40918014a20b80169b40918014a20b80168b40918014a20
b80167b40918014a20b80166b40918014a20b80165b40918014a20b80164
b40918014a20b80163b40918014a20b80162b40918014a20b80161b40918
014a20b80160b40918014a20b8015fb40918014a20b8015eb40918014a20
b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8015a
b40918014a20b80159b40918014a20b80158b40918014a20b80157b40918
014a20b80156b40918014a20b80155b40918014a20b80154b40918014a20
b80153b40918014a20b80152b40918014a20b80150b40918014a20b8014f
b40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80149b40918014a20b80148b40918014a20
b80147b40918014a20b80146b40918014a20b80145b40918014a20b80144
b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151fb802
82b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb2
1e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e
1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d431fb8
0275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb80271
b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026db21d
431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c451f
b80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451fb802
64b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb80260b2
1c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb21c45
1fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c451fb8
0257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb80253
b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024fb21c
451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c451f
b8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb802
46b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b2
1b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a
1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb8
0239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235
b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b
4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1f
b8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb802
28b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb80224b2
1b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c
1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8
021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217
b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a
4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1f
b8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb802
0ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b2
19501fb80205b219511fb80204b219511fb80203b219501fb80202b21951
1fb80201b219511fb80200b219511fb801ffb219511fb801feb219501fb8
01fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb801f9
b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5b218
541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218541f
b801f0b218531fb801efb218541fb801eeb218541fb801edb218541fb801
ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801e8b2
18541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b21853
1fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b218531fb8
01dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb801db
b218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7b217
571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217571f
b801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561fb801
ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801cab2
17561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b21757
1fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b217571fb8
01c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb801bd
b217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9b217
571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217571f
b801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801
b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2
165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f
1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb8
01a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019f
b2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb216
5b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1f
b80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb801
92b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2
165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b
1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b215611fb8
0185b215621fb80184b215621fb80183b215661fb80182b215661fb80181
b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017db215
611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215661f
b80178b215661fb80177b215661fb80176b215661fb80175b215661fb801
74b215661fb80173b215451fb80172b215621fb80171b215621fb80170b2
15631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb21566
1fb8016bb215661fb8016ab215661fb80169b215621fb80168b215621fb8
0167b215611fb80166b215641fb80165b215641fb80164b215661fb80163
b215661fb80162b215661fb80161b215661fb80160b215661fb8015fb215
661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215361f
b8015ab215611fb80159b215621fb80158b215621fb80157b215631fb801
56b215641fb80155b215661fb80154b215661fb80153b215661fb80152b2
15661fb80151b214401fb80150b214551fb8014fb214561fb8014eb21483
1fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab214411fb8
0149b214401fb80148b214401fb80147b214411fb80146b2147e1fb80145
b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141b212
461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212461f
b8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1fb801
38b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb80134b2
115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b21157
1fb8012fb211571fb8012eb211581fb8012db211591fb8012cb211591fb8
012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127
b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123b211
571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb2115a1f
b8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb801
1ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2
105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d
1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8
010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109
b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105b210
5e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1f
b8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f
621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f621f
f20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f
631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e681f
e30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e
681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1f
d40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d
6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681f
c50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311f
be0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c
711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c741f
af0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b
7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1f
a00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b
7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f
910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403
381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b
7d7b7dab7ddb7d404d060a7c557a557bab7a557955775578ab775576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b401151f4603bc01000100000500010190b154532b
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b2b745e732b2b5e73742b73742b7374745e73
01755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73
002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002
43545841ff0284006402830064028200640281006402800064027f006402
7e0064027d0064027c0064027b0064027a00640279006402780064027700
64027600640275006402740064027300640271006402700064026f006402
6e0064026d0064026c0064026b0064026a00640269006402680064026700
640266006402650064026400640263006402620064026100640260006402
5f0064025e0064025d0064025c0064025b0064025a006402590064025800
640257006402560064025500640254006402530064025200640251006402
500064024f0064024e0064024d0064024c0064024b0064024a0064024900
640248006402470064024600640245006402440064024300640242006402
41006402400064023f0064023e0064023d0064023c0064023b0064023a00
640239006402380064023700640236006402350064023400640233006402
3200640231006402300064022f0064022e0064022d0064022c0064022b00
64022a006402290064022800640227006402260064022500640224006402
230064022200640221006402200064021f0064021e0064021d0064021c00
64021b0064021a0064021900640218006402170064021600640215006402
14006402130064021200640211006402100064020f0064020e0064020d00
64020c0064020b0064020a00640209006402080064020700640206006402
050064020441ff00640203006402020064020100640200006401ff006401
fe006401fd006401fc006401fb006401fa006401f9006401f8006401f700
6401f6006401f5006401f4006401f3006401f2006401f1006401f0006401
ef006401ee006401ed006401ec006401eb006401ea006401e9006401e800
6401e7006401e6006401e5006401e4006401e3006401e2006401e1006401
e0006401df006401de006401dd006401dc006401db006401da006401d900
6401d8006401d7006401d6006401d5006401d4006401d3006401d2006401
d1006401d0006401cf006401ce006401cd006401cc006401cb006401ca00
6401c9006401c8006401c7006401c6006401c5006401c4006401c3006401
c2006401c1006401c0006401bf006401be006401bd006401bc006401bb00
6401ba006401b9006401b8006401b7006401b6006401b5006401b4006401
b3006401b2006401b1006401b0006401af006401ae006401ad006401ac00
6401ab006401aa006401a9006401a8006401a7006401a6006401a5006401
a4006401a3006401a2006401a1006401a00064019f0064019e0064019d00
64019c0064019b0064019a00640199006401980064019700640196006401
9500640194006401930064019200640191006401900064018f0064018e00
64018d0064018c0064018b0064018a006401890064018800640187006401
860064018500644180018400640183006401820064018100640180006401
7f0064017e0064017d0064017c0064017b0064017a006401790064017800
640177006401760064017500640174006401730064017200640171006401
700064016f0064016e0064016d0064016c0064016b0064016a0064016900
640168006401670064016600640165006401640064016300640162006401
61006401600064015f0064015e0064015d0064015c0064015b0064015a00
640159006401580064015700640156006401550064015400640153006401
52006401500064014f0064014e0064014c0064014b0064014a0064014900
640148006401470064014600640145006401440064014300642b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b185f5e0000>
[15901 8983 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> RYGAAA+Calibri AddT42Char 
2 414 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>RYGAAA+Calibri AddT42Char 
1 2230 44 <000100acfffa04500514002f00b8b43f3101230cb8ffe8b310014d0cb8ff
f0b30f014d0cb8fff0b30d014d0cb8fff6b30c014d0cb8ffe8b30b014d0c
b80211401c17240b1810014d0b100f014d0b100d014d0b0a0c014d0b180b
014d0bb802104017004015014d004013014d00401011014c00400c014d00
17b8ffc0b315014d17b8ffc0b613014d172a5224b8012c400fc00c01d00c
010c0c121d5212550555003f3f3f12392f5d71ed3f012f2b2bd42b2b2b2b
e12b2b2b2b2b3210e12b2b2b2b2b3231305d25140e0223222e0235112111
140e0223222e023511343e0233321e0215112111343e0233321e02150450
081421181a201408fdb308142119182214080814221819211408024d0814
201a182114081a080c070505070c08023efdc2080c070505070c0804da08
0c070505070c08fdfa0206080c070505070c0800>RYGAAA+Calibri AddT42Char 
1 3312 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>RYGAAA+Calibri AddT42Char 
1 4208 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>RYGAAA+Calibri AddT42Char 
1 7108 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>RYGAAA+Calibri AddT42Char 
1 7482 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>RYGAAA+Calibri AddT42Char 
1 7788 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>RYGAAA+Calibri AddT42Char 
1 8370 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>RYGAAA+Calibri AddT42Char 
1 8716 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>RYGAAA+Calibri AddT42Char 
1 9452 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>RYGAAA+Calibri AddT42Char 
1 10338 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>RYGAAA+Calibri AddT42Char 
1 10646 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>RYGAAA+Calibri AddT42Char 
1 11520 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>RYGAAA+Calibri AddT42Char 
1 12436 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>RYGAAA+Calibri AddT42Char 
1 13096 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>RYGAAA+Calibri AddT42Char 
1 14022 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>RYGAAA+Calibri AddT42Char 
1 14738 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>RYGAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>RYGAAA+Calibri AddT42Char 
RYGAAA+Calibri /CharStrings get begin
/space 3 def
/period 856 def
/H 44 def
/M 68 def
/P 87 def
/a 258 def
/b 271 def
/c 272 def
/e 286 def
/f 296 def
/h 346 def
/k 364 def
/l 367 def
/o 381 def
/r 396 def
/t 410 def
/w 449 def
/y 455 def
end
RYGAAA+Calibri /Encoding get
dup 32 /space put
dup 46 /period put
dup 72 /H put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 107 /k put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 119 /w put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/PGIEAA+Calibri /RYGAAA+Calibri findfont ct_VMDictPut
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 25{/.notdef}rp /H 4{/.notdef}rp /M 
2{/.notdef}rp /P 16{/.notdef}rp /a /b /c /.notdef /e 
/f /.notdef /h 2{/.notdef}rp /k /l 2{/.notdef}rp /o 
2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w /.notdef /y 
134{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
129.254 52.92 mo
(HybPhyloMaker flowchart.)
[6.83377 5.04532 5.64137 5.76286 5.7628 5.04532 2.39572 5.88425 9.48331 5.15573 4.92386 5.52 
3.8419 2.51711 3.35608 2.51717 5.76279 7.91565 4.681 5.76282 5.27716 3.8419 3.72055 0 
]xsh
248.519 52.92 mo
( )sh
72 74.2824 mo
( )sh
72 95.7662 mo
( )sh
2 lw
0 lc
0 lj
8 ml
[] 0 dsh
true sadj
422 778.3 mo
422 600.35 li
374.45 600.35 li
0 0 0 1 cmyk
@
1 lc
378.45 602.85 mo
374.45 600.35 li
378.45 597.85 li
@
0 lc
1 lj
205.15 778.3 mo
92.95 778.3 li
@
260.7 122.85 mo
260.7 160.3 li
@
1 lc
0 lj
263.2 156.3 mo
260.7 160.3 li
258.2 156.3 li
@
0 lc
1 lj
327.1 644.15 mo
327.1 695.45 li
@
1 lc
0 lj
329.6 691.45 mo
327.1 695.45 li
324.6 691.45 li
@
0 lc
1 lj
181.9 643.85 mo
181.9 695.15 li
@
1 lc
0 lj
184.4 691.15 mo
181.9 695.15 li
179.4 691.15 li
@
0 lc
1 lj
330.75 587.45 mo
330.797 619.2 li
@
1 lc
0 lj
333.291 615.196 mo
330.797 619.2 li
328.291 615.203 li
@
0 lc
1 lj
181.95 588.2 mo
181.997 619.95 li
@
1 lc
0 lj
184.491 615.946 mo
181.997 619.95 li
179.491 615.953 li
@
0 lc
1 lj
260.65 258.7 mo
260.65 298.65 li
@
1 lc
0 lj
263.15 294.65 mo
260.65 298.65 li
258.15 294.65 li
@
0 lc
1 lj
260.65 183.7 mo
260.65 235.4 li
@
1 lc
0 lj
263.15 231.4 mo
260.65 235.4 li
258.15 231.4 li
@
188.95 123.15 mo
331.85 123.15 li
331.85 88.35 li
188.95 88.35 li
cp
0 0 0 0 cmyk
ef
.75 lw
188.95 123.15 mo
331.85 123.15 li
331.85 88.35 li
188.95 88.35 li
cp
0 0 0 1 cmyk
@
gsave
189.36 119.16 mo
331.44 119.16 li
331.44 92.4 li
189.36 92.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 8068 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PGIEAA+Calibri AddT42Char 
1 8978 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>PGIEAA+Calibri AddT42Char 
1 9716 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PGIEAA+Calibri AddT42Char 
1 11230 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/d 282 def
/g 336 def
/i 349 def
/n 374 def
end
PGIEAA+Calibri /Encoding get
dup 100 /d put
dup 103 /g put
dup 105 /i put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 25{/.notdef}rp /H 4{/.notdef}rp /M 
2{/.notdef}rp /P 16{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /.notdef 
/n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 
/.notdef /y 134{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
222.72 102.72 mo
(original raw data)
[5.88425 3.8419 2.51717 5.15561 2.51715 5.76282 5.27716 2.51718 2.51709 3.84192 5.27716 7.91562 
2.51709 5.76282 5.15573 3.72055 0 ]xsh
grestore
gsave
189.36 119.16 mo
331.44 119.16 li
331.44 92.4 li
189.36 92.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
298.08 102.72 mo
( )sh
grestore
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 1466 894 <00010085fea701f3058b00230022401503100b014d03100f014d03100c0d
014c03151f0b85003f2f012f332b2b2b3130010602151412171616060623
222e02272e0335343e02373e0333321e0201ef5f5d5f5b05010e1d19121a
130c033652381c1f3952330109101c16171c10020562c9fe59d6d7fe5acb
0c110b050206080566d1d8dd7171dcd9d26704060603060a1000>PGIEAA+Calibri AddT42Char 
2 1612 895 <0001007afea701e7058b00210033b90012fff0b30b014d12b8fff0b30f01
4d12b8fff0b50c0d014c1200b8ffc0b60b014d001a0a85003f2f012f2b32
2b2b2b313001140e02070e03232226263637361235340227263e0233321e
0217161201e71c385136030c131a121a1d0d01055c5e5e5e0402101c1715
1c1108026775021971ddd8d16605080602050b110cca01a7d7d601a7c909
100a0603060604cdfe4f>PGIEAA+Calibri AddT42Char 
2 5690 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>PGIEAA+Calibri AddT42Char 
1 10780 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>PGIEAA+Calibri AddT42Char 
1 11828 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>PGIEAA+Calibri AddT42Char 
1 12130 395 <00020060fe94039c03ca002a003d0086401b3f3f011f0b2b100d014d2b0a
0c014d2b180b014d2b100f10014c2bbb01f9002a0033ffeeb30c014d33b8
fff0b30f014d33b8ffeab30d014d33b8ffe8b310014d33b8ffe8b30b014d
33b8020a400a1525490b3d2b1f04102eb80105b21a4a38b80104b3104d05
4f003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b323931305d
01140e0223222e0235110e0323222e0235343e0233321e021735343e0233
321e021503262623220e0215141e0233323e0237039c09122018191f1407
294a484927628a57283263915f284645472a08121c15141c1107a6437d44
3f58371915345641213d404627feb4080c080404080c0801cd2939230f4d
83b16274bb844711253b296d090b080303080b09fef553573c627c404582
643d122a4331>PGIEAA+Calibri AddT42Char 
1 12678 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PGIEAA+Calibri AddT42Char 
1 14940 460 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/parenleft 894 def
/parenright 895 def
/two 1006 def
/m 373 def
/p 393 def
/q 395 def
/s 400 def
/z 460 def
end
PGIEAA+Calibri /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 50 /two put
dup 109 /m put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 3{/.notdef}rp 
/two 21{/.notdef}rp /H 4{/.notdef}rp /M 2{/.notdef}rp /P 16{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t 2{/.notdef}rp /w /.notdef /y 
/z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
199.32 116.04 mo
(\(2 fastq.gz files per )
[3.35609 5.64148 2.51709 3.35608 5.27718 4.19527 3.72055 5.76282 2.75999 5.15559 4.3167 2.51709 
3.35608 2.51717 2.51717 5.52002 4.31668 2.51712 5.76282 5.51999 3.84192 0 ]xsh
286.205 116.04 mo
(sample\))
[4.31671 5.27716 8.87613 5.76279 2.39572 5.52002 0 ]xsh
321.61 116.04 mo
( )sh
188.3 259.8 mo
331.2 259.8 li
331.2 238.4 li
188.3 238.4 li
cp
0 0 0 0 cmyk
ef
188.3 259.8 mo
331.2 259.8 li
331.2 238.4 li
188.3 238.4 li
cp
0 0 0 1 cmyk
@
gsave
188.64 255.84 mo
330.84 255.84 li
330.84 242.4 li
188.64 242.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
232.08 252.72 mo
(filtered data)
[3.35608 2.51717 2.51717 3.72055 5.52 3.84192 5.52002 5.76282 2.51709 5.76282 5.27716 3.72055 
0 ]xsh
grestore
gsave
188.64 255.84 mo
330.84 255.84 li
330.84 242.4 li
188.64 242.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
287.28 252.72 mo
( )sh
grestore
189.7 322.4 mo
332.6 322.4 li
332.6 301 li
189.7 301 li
cp
0 0 0 0 cmyk
ef
189.7 322.4 mo
332.6 322.4 li
332.6 301 li
189.7 301 li
cp
0 0 0 1 cmyk
@
gsave
190.08 318.36 mo
332.16 318.36 li
332.16 305.04 li
190.08 305.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 13344 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/u 437 def
end
PGIEAA+Calibri /Encoding get
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 3{/.notdef}rp 
/two 21{/.notdef}rp /H 4{/.notdef}rp /M 2{/.notdef}rp /P 16{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /.notdef /w /.notdef 
/y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
213.36 315.36 mo
(consensus sequences)
[4.681 5.88425 5.76282 4.31671 5.52 5.76282 4.31671 5.76282 4.31671 2.39566 4.31671 5.51999 
5.76282 5.76282 5.52002 5.76282 4.55954 5.52002 0 ]xsh
grestore
gsave
190.08 318.36 mo
332.16 318.36 li
332.16 305.04 li
190.08 305.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
309 315.36 mo
( )sh
grestore
189.45 380.95 mo
332.35 380.95 li
332.35 359.55 li
189.45 359.55 li
cp
0 0 0 0 cmyk
ef
189.45 380.95 mo
332.35 380.95 li
332.35 359.55 li
189.45 359.55 li
cp
0 0 0 1 cmyk
@
gsave
189.84 376.92 mo
331.92 376.92 li
331.92 363.6 li
189.84 363.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 3156 62 <000100ac0000034b0514001a0048b90015ffe8b310014d15b8fff0b30f01
4d15b8fff0b30d014d15b8fff6b30c014d15b8ffe8b30b014d15b80211b4
00090f5215b8012bb10654003fed3f012fcde12b2b2b2b2b313025140e02
232122263511343e0233321e02151121321e02034b04090d09fdc4172908
1422181921140801d0090d09044b141b13091f2704ae080c070505070c08
fba109111c00>PGIEAA+Calibri AddT42Char 
1 5102 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PGIEAA+Calibri AddT42Char 
1 6524 121 <00010030fffa03f60514002f0030401d292f01292e012618012617012716
012800012952230b111d5211550555003f3f3f1239393f3130015d5d5d5d
5d5d251616060623222e022701010e032322262636370101262636363332
1e021701013e033332161606070103e40d051229222024150b04fee0fedd
050c15241e21260f050d0161feaf0c071028231e26160a0601160114050a
13221d1f2711040cfeb03e161a0f0503080b090203fdfd090c0703050f1a
160253023f161b0f0403070d08fe1c01e4080d0703050e1b16fdc500>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/L 62 def
/S 94 def
/X 121 def
end
PGIEAA+Calibri /Encoding get
dup 76 /L put
dup 83 /S put
dup 88 /X put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 3{/.notdef}rp 
/two 21{/.notdef}rp /H 3{/.notdef}rp /L /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 4{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /.notdef /w /.notdef /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
240 373.92 mo
(PSLX files)
[5.76286 5.03424 4.68094 5.6414 2.51709 3.35608 2.51718 2.51715 5.52002 0 ]xsh
grestore
gsave
189.84 376.92 mo
331.92 376.92 li
331.92 363.6 li
189.84 363.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
281.76 373.92 mo
( )sh
grestore
189.8 457.4 mo
332.7 457.4 li
332.7 436 li
189.8 436 li
cp
0 0 0 0 cmyk
ef
189.8 457.4 mo
332.7 457.4 li
332.7 436 li
189.8 436 li
cp
0 0 0 1 cmyk
@
gsave
190.2 453.36 mo
332.28 453.36 li
332.28 440.04 li
190.2 440.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
224.4 450.36 mo
(gene alignments)
[5.15561 5.52 5.76282 5.52 2.51711 5.27716 2.51717 2.51715 5.15561 5.76282 8.75467 5.52002 
5.76282 3.72055 0 ]xsh
grestore
gsave
190.2 453.36 mo
332.28 453.36 li
332.28 440.04 li
190.2 440.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
298.08 450.36 mo
( )sh
grestore
189.9 526 mo
332.8 526 li
332.8 491.2 li
189.9 491.2 li
cp
0 0 0 0 cmyk
ef
189.9 526 mo
332.8 526 li
332.8 491.2 li
189.9 491.2 li
cp
0 0 0 1 cmyk
@
gsave
190.32 522 mo
332.399 522 li
332.399 495.24 li
190.32 495.24 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
205.68 505.56 mo
(gene alignments without )
[5.15561 5.52 5.76282 5.52 2.51711 5.27716 2.51717 2.51715 5.15561 5.76282 8.75467 5.52002 
5.76282 3.72055 4.31671 2.39566 7.91562 2.51718 3.72055 5.76282 5.88422 5.76282 3.59912 0 
]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
233.4 519 mo
(missing data)
[8.87611 2.51717 4.31671 4.31671 2.51717 5.7628 5.15561 2.51709 5.76282 5.27716 3.72055 0 
]xsh
289.318 519 mo
( )sh
201.05 228.85 mo
322.05 228.85 li
322.05 191.6 li
201.05 191.6 li
cp
0 0 0 .16553 cmyk
ef
201.05 228.85 mo
322.05 228.85 li
322.05 191.6 li
201.05 191.6 li
cp
0 0 0 1 cmyk
@
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 6726 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>PGIDZZ+Calibri-Bold AddT42Char 
1 8542 296 <00010019fffa02980578003c0073b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1a4ded2b323fed012fc433fdc433c431301bb9000a011db3
36471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1a
4ded2b323fed31305901140e0223222e0223220e02151533321e02151406
232311140e0223222e02351123222635343e02333335343e0233321e0402
9804080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b
70131305090f0a6f244d77512746280e090404f21d23130707080711253b
2b520a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b
2e0d0f0d1927>PGIDZZ+Calibri-Bold AddT42Char 
1 8818 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>PGIDZZ+Calibri-Bold AddT42Char 
1 10252 367 <0001007efffa017a05700015003fb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1a4ded31305f5e
5d5d5d5d1bb31046054c00183f3f31305925140e0223222e023511343e02
33321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a
0f0a05230a100b06060b100a>PGIDZZ+Calibri-Bold AddT42Char 
1 11918 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>PGIDZZ+Calibri-Bold AddT42Char 
1 12594 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/a 258 def
/f 296 def
/g 336 def
/l 367 def
/r 396 def
/t 410 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 97 /a put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 114 /r put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
31{/.notdef}rp /a 2{/.notdef}rp /d /e /f /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /.notdef /p /.notdef 
/r /.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
215.52 203.16 mo
(read filtering)
[2.87828 4.07634 3.9557 4.31749 1.80095 2.51648 1.92157 1.92159 2.75772 4.07632 2.87828 1.92159 
4.31749 0 ]xsh
grestore
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
258.72 203.16 mo
( )sh
grestore
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
260.52 203.16 mo
(\()sh
grestore
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 13656 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/v 448 def
end
PGIEAA+Calibri /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 3{/.notdef}rp 
/two 21{/.notdef}rp /H 3{/.notdef}rp /L /M 2{/.notdef}rp /P 
2{/.notdef}rp /S 4{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
262.92 203.16 mo
(PhiX removal)
[4.19687 4.19684 1.80099 4.19684 1.80093 2.75772 3.84314 6.48019 4.19684 3.60187 3.84317 0 
]xsh
grestore
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 0 853 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b20100606102000>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/comma 853 def
end
PGIEAA+Calibri /Encoding get
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period 3{/.notdef}rp /two 21{/.notdef}rp /H 3{/.notdef}rp /L /M 
2{/.notdef}rp /P 2{/.notdef}rp /S 4{/.notdef}rp /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
/z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
305.64 203.16 mo
(, )
[2.04218 0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
219.84 212.88 mo
(adaptor trimming)
[3.84315 4.19682 3.84315 4.19682 2.63718 4.19682 2.75772 1.80093 2.63718 2.87831 1.80099 6.48019 
6.48022 1.80099 4.19681 0 ]xsh
277.318 212.88 mo
(, )
[2.04214 0 ]xsh
281.161 212.88 mo
(quality )
[4.19684 4.19684 3.84314 1.80099 1.80099 2.63718 3.60193 0 ]xsh
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
248.88 222.72 mo
(filtering)
[2.39586 1.80099 1.80099 2.63716 4.07629 2.75772 1.80099 4.19681 0 ]xsh
grestore
gsave
201.48 224.88 mo
321.599 224.88 li
321.599 195.6 li
201.48 195.6 li
cp
clp
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
274.2 222.72 mo
( )sh
grestore
202.55 293.35 mo
323.55 293.35 li
323.55 265.85 li
202.55 265.85 li
cp
0 0 0 .16553 cmyk
ef
202.55 293.35 mo
323.55 293.35 li
323.55 265.85 li
202.55 265.85 li
cp
0 0 0 1 cmyk
@
gsave
202.92 289.32 mo
323.16 289.32 li
323.16 269.88 li
202.92 269.88 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
240 277.44 mo
(read )
[2.87828 4.07634 3.9557 4.31749 0 ]xsh
grestore
gsave
202.92 289.32 mo
323.16 289.32 li
323.16 269.88 li
202.92 269.88 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 10384 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/m 373 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
31{/.notdef}rp /a 2{/.notdef}rp /d /e /f /g /.notdef 
/i 2{/.notdef}rp /l /m /n /.notdef /p /.notdef 
/r /.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
256.92 277.44 mo
(mapping)
[6.60086 3.95572 4.3175 4.3175 1.92157 4.1969 0 ]xsh
grestore
gsave
202.92 289.32 mo
323.16 289.32 li
323.16 269.88 li
202.92 269.88 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
285.96 277.44 mo
( )sh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
225.48 287.16 mo
(\()sh
227.884 287.16 mo
(and consensus calling\))
[3.84315 4.19682 4.19684 1.80093 3.36076 4.19682 4.19682 3.11957 3.96375 4.19681 3.1196 4.19681 
3.1196 1.80093 3.36075 3.95572 1.80099 1.80099 1.80096 4.19684 3.84308 0 ]xsh
300.485 287.16 mo
( )sh
2 lw
0 lc
1 lj
260.65 322.3 mo
260.697 357.15 li
0 0 0 1 cmyk
@
1 lc
0 lj
263.192 353.147 mo
260.697 357.15 li
258.192 353.154 li
@
203.3 347.55 mo
324.3 347.55 li
324.3 329.85 li
203.3 329.85 li
cp
0 0 0 .16553 cmyk
ef
.75 lw
203.3 347.55 mo
324.3 347.55 li
324.3 329.85 li
203.3 329.85 li
cp
0 0 0 1 cmyk
@
gsave
203.64 343.56 mo
323.88 343.56 li
323.88 333.84 li
203.64 333.84 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 666 17 <0003008d00000436050e001e002b0038009fb10102435558b9001f0293b5
1a0b15150b00b8029cb22c2633b80279b20b1a27b80103b331310724b8ff
e8b40b0f014c24b801254009105134180b0f014c34b80129b24007540018
3f1a4ded2b3fed2b12392fed39012fed322fed11392f1239ed31301bb11a
27b80103b331310724b8ffe8b40b0f014c24b801254009105134180b0f01
4c34b80129b240075400183f1a4ded2b3fed2b12392fed3931305901140e
0423212226351134363321321e0215140e02071e0301342e022323113332
3e0213342e0223231133323e02043626435d707f4efea8212d2d21014577
a5713c182e432b375d4528feac1830493d859339442d16431e3a5a489cbe
374b371f01844570563e2813272c04682c2728517c542f534434100a324f
6a01df273e2916feb01b2f3ffdf92d47301afe90172d4300>PGIDZZ+Calibri-Bold AddT42Char 
1 3406 62 <0001008d000003540514001a004bb10102435558b900150294400b00090f
5215180b0f014c15b8015db240065400183f1a4ded2b3f012fcded31301b
40090f5215180b0f014c15b8015db240065400183f1a4ded2b3f31305925
140e02232122263511343e0233321e02151121321e020354050a0f0afdaf
212d0d1e332627321e0d01970a0f0a056e1e291b0c272c04970a100a0606
0a100afbef0b1929>PGIDZZ+Calibri-Bold AddT42Char 
1 5522 100 <0001000cfffa03ea050e00220055b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1a4ded2b32012f
c4fdcd31301bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f
3f1a4ded2b3231305901140e02232111140e0223222e02351121222e0235
343e023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05
050a0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19
291d1e2a190b0b192a00>PGIDZZ+Calibri-Bold AddT42Char 
1 7522 272 <00010048ffea032103d60035009db10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1a4dfd2bd42bed3f
fd2bd4ed012fedc43231301bbc0018011f001f0024ffe8b40b0f014c24b8
011fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b2
40094d00183f1a4dfd2bd42bed3ffd2bd4ed31305925140e0623222e0235
343e0233321e0615140623222e0223220615141e0233323e0233321e0203
21030507183a4a572e679f6c374378a462284d4335160905031410112634
483262681a334d33344b38260d090c0704b01a23180f17211a10407db474
86c3803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00
>PGIDZZ+Calibri-Bold AddT42Char 
1 11042 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/B 17 def
/L 62 def
/T 100 def
/c 272 def
/o 381 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 66 /B put
dup 76 /L put
dup 84 /T put
dup 99 /c put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B 9{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a /.notdef 
/c /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /.notdef 
/t 3{/.notdef}rp /x 135{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
234 341.4 mo
(BLAT to reference)
[4.55872 3.36075 4.9205 3.96368 1.80095 2.75772 4.31743 1.80093 2.75769 4.07632 2.51648 4.07632 
2.75769 4.07632 4.3175 3.36072 0 ]xsh
grestore
gsave
203.64 343.56 mo
323.88 343.56 li
323.88 333.84 li
203.64 333.84 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
293.4 341.4 mo
( )sh
grestore
2 lw
0 lc
1 lj
260.65 380.7 mo
260.65 433.65 li
@
1 lc
0 lj
263.15 429.65 mo
260.65 433.65 li
258.15 429.65 li
@
203.3 424.35 mo
324.3 424.35 li
324.3 387.1 li
203.3 387.1 li
cp
0 0 0 .16553 cmyk
ef
.75 lw
203.3 424.35 mo
324.3 424.35 li
324.3 387.1 li
203.3 387.1 li
cp
0 0 0 1 cmyk
@
gsave
203.64 420.36 mo
323.88 420.36 li
323.88 391.08 li
203.64 391.08 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 7198 271 <0002007effe904000570002a003d0096b10102435558b20a2136bb026000
15002b0284400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b46104c39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b46104c39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022715140e0223
222e023511343e0233321e0215113e0333321e0205342e0223220e020711
161633323e02040034628f5b2d4e4745240b192a1e1f29190a0c1d302525
301d0c2244444828638a5728fefb112a4333193033361e35613531442d14
01ec77be864811263a29610b0f0a04040a0f0b05230a100b06060b100afe
1322301f0e4f86b375396a52310e223628fed84447325066>PGIDZZ+Calibri-Bold AddT42Char 
1 12172 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/b 271 def
/s 400 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 98 /b put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B 9{/.notdef}rp /L 7{/.notdef}rp /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t 3{/.notdef}rp /x 135{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
238.68 398.64 mo
(combine exons )
[3.36072 4.31743 6.60088 4.3175 1.92157 4.1969 4.07632 1.80093 4.07635 3.7225 4.19684 4.3175 
3.24014 0 ]xsh
grestore
gsave
203.64 420.36 mo
323.88 420.36 li
323.88 391.08 li
203.64 391.08 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
290.52 398.64 mo
( )sh
grestore
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 15290 894 <0001006bfe9f021c059000230022bf001a01fa0000001001f90006000302
74b3151f0b85003f2f012ffdd6edd6ed3130010602151412171614060623
222e02272e0335343e02373e0333321e0202175456575206162d281c281b
0f033650351a1b364f35020c182920242e18030558c3fe61dadbfe63c610
17100804070b0768d3d7db7170dbd7d46905080703070e16>PGIDZZ+Calibri-Bold AddT42Char 
1 15434 895 <00010061fe9f0212059000210024b900000273b2121505bb01fa000f001f
01fbb3151a0a85003f2f012fedd6ed10d6ed313001140e02070e03232226
263437361235340227263e0233321e0217161202121a354f36030f1b281c
292d1606535756550503192d251f281a0b03686c021a71dbd7d368070b07
0408101710c4019fdbda019fc30d160e0703070805d2fe53>PGIDZZ+Calibri-Bold AddT42Char 
1 1802 38 <0001008dfffa0363050e002700b9b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1a4ded2b2b12392f2bed2b2b2b012f2fc41139ed3231301b40
1107280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d13
131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb4402251195500
183f3f1a4ded2b2b12392f2bed2b2b2b31305901140e0223211121321e02
15140e02232111140e0223222e02351134363321321e020363050b0e09fe
59018d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504
a21e29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b
192a>PGIDZZ+Calibri-Bold AddT42Char 
1 3564 68 <0001008dfffa0671050e003c00d9b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
4ded3232323f012fd4ed32113310ed32113311393d2f3333113331301bb5
3651190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c
17101023024c0d101023024c0d172f30312e061f28511f55125505550018
3f3f3f3f1217392b2b2b2b1a4ded3232323f31305925140e0223222e0235
1123010e0323222e0227012311140e0223222e02351134363333321e0217
0133013e033333321e021506710b1d302524301c0c02fe8904121f302222
301f1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f
293825b11b27190d240a100a06060a100a041dfbe40d110a03050b100b04
1cfbe30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b27
1900>PGIDZZ+Calibri-Bold AddT42Char 
1 14838 858 <0001006b033301f80578001b0014b11b01b8028db30b061647003fcd012f
fdc631300115140e0223222e0235343e0237373e03333216161407017a10
2235242332210e07121c158607101923181e24100404399d222a16070716
2a2227413a371dc10a0e0904040b100b>PGIDZZ+Calibri-Bold AddT42Char 
1 14944 859 <00010017033301a60578001b0014b11000b8028eb3120b1747003fcd012f
edc6313001140e0207070e0323222e02371335343e0233321e0201a60812
1c1586071118221a1d241001057a102234252332210f050e27413a371dc0
0a0e0904040a110b01149d222a170707172a>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/parenleft 894 def
/parenright 895 def
/F 38 def
/M 68 def
/quoteleft 858 def
/quoteright 859 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 70 /F put
dup 77 /M put
dup 145 /quoteleft put
dup 146 /quoteright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 8{/.notdef}rp 
/colon 6{/.notdef}rp /A /B 3{/.notdef}rp /F 5{/.notdef}rp /L 
/M 6{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d 
/e /f /g /.notdef /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t 3{/.notdef}rp 
/x 24{/.notdef}rp /quoteleft /quoteright 109{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
230.16 408.48 mo
(align exons \(MAFFT\))
[3.9557 1.92159 1.92157 3.84311 4.3175 1.80095 4.07632 3.72252 4.31744 4.31747 3.24014 1.68036 
2.51648 6.96259 4.9205 3.60193 3.7225 3.95566 0 ]xsh
297.358 408.48 mo
( )sh
226.076 418.2 mo
(concatenate to \221genes\222)
[3.36072 4.31743 4.3175 3.36072 3.9557 2.75772 4.07632 4.31749 3.95572 2.63712 4.07632 1.80096 
2.75772 4.31741 1.80096 2.04211 3.84311 4.07632 4.1969 4.07632 3.24014 0 ]xsh
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
301.314 418.2 mo
( )sh
2 lw
0 lc
1 lj
260.65 456.95 mo
260.697 488.7 li
0 0 0 1 cmyk
@
1 lc
0 lj
263.191 484.696 mo
260.697 488.7 li
258.191 484.703 li
@
204.05 481.8 mo
325.05 481.8 li
325.05 464.1 li
204.05 464.1 li
cp
0 0 0 .16553 cmyk
ef
.75 lw
204.05 481.8 mo
325.05 481.8 li
325.05 464.1 li
204.05 464.1 li
cp
0 0 0 1 cmyk
@
gsave
204.48 477.84 mo
324.6 477.84 li
324.6 468.12 li
204.48 468.12 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 13144 448 <00010016fffa03b303c6002c0055b10102435558b210211fb80284b64015
2120062123b8025d400c400020212849210b1a490b4c00183f3f12393f01
192f1a18dd1a4ded12391a10dd1aed123931301bb72849210b1a490b4c00
183f3f12393f31305901140e0207010e0323222e0227012e0235343e0233
321e0217131737133e0333321e0203b301030504fef40511274336354326
1105fef40607010b1c312529321d0c04cb0606c8030d1c2f26252f1a0a03
9f050e11160efcd911150c04050c1510032714200e060a0f0a040509110c
fd711919028f0c110905040a0f00>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/v 448 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 8{/.notdef}rp 
/colon 6{/.notdef}rp /A /B 3{/.notdef}rp /F 5{/.notdef}rp /L 
/M 6{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d 
/e /f /g /.notdef /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /.notdef 
/v /.notdef /x 24{/.notdef}rp /quoteleft /quoteright 109{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
229.08 475.68 mo
(missing data removal)
[6.60088 1.92157 3.24014 3.24013 1.92159 4.3175 3.84311 1.68034 4.31749 3.96375 2.75772 3.95572 
1.80093 2.8783 3.96375 6.60089 4.19684 3.84317 3.95572 0 ]xsh
grestore
gsave
204.48 477.84 mo
324.6 477.84 li
324.6 468.12 li
204.48 468.12 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
300 475.68 mo
( )sh
grestore
132.35 588.2 mo
238 588.2 li
238 565.05 li
132.35 565.05 li
cp
0 0 0 0 cmyk
ef
132.35 588.2 mo
238 588.2 li
238 565.05 li
132.35 565.05 li
cp
0 0 0 1 cmyk
@
gsave
132.72 584.16 mo
237.6 584.16 li
237.6 569.04 li
132.72 569.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 1686 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>PGIEAA+Calibri AddT42Char 
1 5522 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/F 38 def
/T 100 def
end
PGIEAA+Calibri /Encoding get
dup 70 /F put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period 3{/.notdef}rp /two 19{/.notdef}rp /F /.notdef /H 3{/.notdef}rp 
/L /M 2{/.notdef}rp /P 2{/.notdef}rp /S /T 3{/.notdef}rp 
/X 8{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /.notdef /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
141.12 579.6 mo
(FastTree gene trees)
[5.03424 5.27716 4.31671 3.72055 5.39856 3.8419 5.39857 5.52002 2.51709 5.15561 5.52 5.76282 
5.39857 2.51709 3.72055 3.84192 5.39857 5.52 0 ]xsh
grestore
gsave
132.72 584.16 mo
237.6 584.16 li
237.6 569.04 li
132.72 569.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
229.2 579.6 mo
( )sh
grestore
275.7 588.2 mo
381.35 588.2 li
381.35 565.05 li
275.7 565.05 li
cp
0 0 0 0 cmyk
ef
275.7 588.2 mo
381.35 588.2 li
381.35 565.05 li
275.7 565.05 li
cp
0 0 0 1 cmyk
@
gsave
276.12 584.16 mo
381 584.16 li
381 569.04 li
276.12 569.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>PGIEAA+Calibri AddT42Char 
1 4760 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>PGIEAA+Calibri AddT42Char 
1 14454 454 <00010029fffa034b03bc002f008140112031012f080b014d2e100b014d3b
2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0b60b014d34
160109b8fff0402a0b014d00080b014d3c0001382301360b010b2010014d
0b200c014d0b0b31302949230b111d49114c054c003f3f3f1239393f1112
01392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b5d25161406062322
2e022703030e0323222626363701012626363633321e021713133e033332
161606070103430813271f1e23150b04d8d7040b15221c1d251101090118
fef708011327201d23140a04cdd0040a111f1b1d25120209fef92c0e130c
0503070b070165fe9b070b0703050c130e01b701a70e130d0403060a07fe
b1014f060a0703040b140ffe5e00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/A 4 def
/R 90 def
/x 454 def
end
PGIEAA+Calibri /Encoding get
dup 65 /A put
dup 82 /R put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period 3{/.notdef}rp /two 14{/.notdef}rp /A 4{/.notdef}rp /F /.notdef 
/H 3{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R 
/S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
288.12 579.6 mo
(RAxML gene trees)
[5.99472 6.35898 4.80237 9.36188 4.68094 2.51712 5.15558 5.52002 5.76282 5.39856 2.51712 3.72055 
3.84189 5.39859 5.52002 0 ]xsh
grestore
gsave
276.12 584.16 mo
381 584.16 li
381 569.04 li
276.12 569.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
368.88 579.6 mo
( )sh
grestore
2 lw
0 lc
1 lj
260.7 526 mo
183.792 564.161 li
@
1 lc
0 lj
188.486 564.622 mo
183.792 564.161 li
186.263 560.143 li
@
0 lc
1 lj
260.7 526 mo
330.594 564.093 li
@
1 lc
0 lj
328.278 559.983 mo
330.594 564.092 li
325.885 564.373 li
@
204.8 555.95 mo
325.8 555.95 li
325.8 538.25 li
204.8 538.25 li
cp
0 0 0 .16553 cmyk
ef
.75 lw
204.8 555.95 mo
325.8 555.95 li
325.8 538.25 li
204.8 538.25 li
cp
0 0 0 1 cmyk
@
gsave
205.2 552 mo
325.44 552 li
325.44 542.28 li
205.2 542.28 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
230.64 549.84 mo
(gene tree estimation)
[3.84311 4.07632 4.3175 4.07632 1.80095 2.63712 2.8783 4.07632 4.07632 1.68033 4.07635 3.24011 
2.75775 1.80096 6.60086 3.95572 2.75772 1.92157 4.31741 0 ]xsh
grestore
gsave
205.2 552 mo
325.44 552 li
325.44 542.28 li
205.2 542.28 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
299.88 549.84 mo
( )sh
grestore
140.8 613.4 mo
226.8 613.4 li
226.8 595.7 li
140.8 595.7 li
cp
0 0 0 .16553 cmyk
ef
140.8 613.4 mo
226.8 613.4 li
226.8 595.7 li
140.8 595.7 li
cp
0 0 0 1 cmyk
@
gsave
141.24 609.36 mo
226.44 609.36 li
226.44 599.64 li
141.24 599.64 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 15578 920 <00040000ffea055a054f00540068007c007d007b400f49737805040a4444
341e195a043e55be0295000a005f0296001400230233400a2f0a142f2f14
0a033e69b8029b400e002929444973341e78195a074e64b80123b30f7d51
6eb80129b24e4d39b80154b1444d003fed3fed3fd4ed12173912392f012f
edc417392f2f2f10ed10ed10ed1117393311121739313013343e02372e03
35343e0233321e0215140e02071e03173e033535343e0233321e02151514
0e02071e03333232161615140e0323222e02270e0323222e0401141e0217
3e0335342e0223220e0203141e0233323e02372e03270e03015221426140
24352311326aa4736998623029537c531b434748220d150f0908192f2523
2e1b0b0e1b281823332418080b130c06030711281c162f3e52362f646d74
42417c6d5a402401800e1926183b4f3014122638262a3b261270203c593a
1e3b3933162d5b564f1f232f1e0efe9e016938635850262e514a4321467b
5a3528496b433c665c552b1f4545441d14343a3c1d1f0b100a05030a110d
2030625d55251b2415080e2423252a140d0b0b1f33282033221214293e55
6d02e5152d313720203633331b182a1f1213232ffd502b48341d0b131b10
2451525124162f3032037d00>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/ampersand 920 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 38 /ampersand put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright 7{/.notdef}rp 
/one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B 3{/.notdef}rp /F 
5{/.notdef}rp /L /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /.notdef /v /.notdef /x 24{/.notdef}rp /quoteleft /quoteright 
109{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
150.12 607.2 mo
(root&combine)
[2.87828 4.31744 4.31743 2.75772 5.63606 3.3607 4.19684 6.60088 4.31749 1.92159 4.3175 0 
]xsh
grestore
gsave
141.24 609.36 mo
226.44 609.36 li
226.44 599.64 li
141.24 599.64 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
198.84 607.2 mo
( )sh
grestore
gsave
141.24 609.36 mo
226.44 609.36 li
226.44 599.64 li
141.24 599.64 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
200.64 607.2 mo
(trees)
[2.75772 2.75769 4.07632 4.07632 0 ]xsh
grestore
gsave
141.24 609.36 mo
226.44 609.36 li
226.44 599.64 li
141.24 599.64 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
217.44 607.2 mo
( )sh
grestore
286.4 612.1 mo
372.4 612.1 li
372.4 594.4 li
286.4 594.4 li
cp
0 0 0 .16553 cmyk
ef
286.4 612.1 mo
372.4 612.1 li
372.4 594.4 li
286.4 594.4 li
cp
0 0 0 1 cmyk
@
gsave
286.8 608.16 mo
371.999 608.16 li
371.999 598.44 li
286.8 598.44 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
295.68 606 mo
(root&combine trees)
[2.8783 4.31741 4.31744 2.75772 5.63605 3.36072 4.19684 6.60086 4.3175 1.9216 4.31747 4.07632 
1.80096 2.75772 2.75769 4.07632 4.07632 0 ]xsh
grestore
gsave
286.8 608.16 mo
371.999 608.16 li
371.999 598.44 li
286.8 598.44 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
363 606 mo
( )sh
grestore
132.35 643.85 mo
238 643.85 li
238 621.2 li
132.35 621.2 li
cp
0 0 0 0 cmyk
ef
132.35 643.85 mo
238 643.85 li
238 621.2 li
132.35 621.2 li
cp
0 0 0 1 cmyk
@
gsave
132.72 639.84 mo
237.6 639.84 li
237.6 625.2 li
132.72 625.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
156.12 635.76 mo
(multitree file)
[8.87611 5.76282 2.51717 3.72055 2.51717 3.72055 3.72047 5.52 5.52002 2.51709 3.35608 2.51717 
2.39572 0 ]xsh
grestore
gsave
132.72 639.84 mo
237.6 639.84 li
237.6 625.2 li
132.72 625.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
214.2 635.76 mo
( )sh
grestore
275.7 643.85 mo
381.35 643.85 li
381.35 621.2 li
275.7 621.2 li
cp
0 0 0 0 cmyk
ef
275.7 643.85 mo
381.35 643.85 li
381.35 621.2 li
275.7 621.2 li
cp
0 0 0 1 cmyk
@
gsave
276.12 639.84 mo
381 639.84 li
381 625.2 li
276.12 625.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
299.52 635.76 mo
(multitree file)
[8.87613 5.76279 2.51718 3.72055 2.51715 3.72055 3.72049 5.52002 5.51999 2.51712 3.35608 2.51715 
2.39572 0 ]xsh
grestore
gsave
276.12 639.84 mo
381 639.84 li
381 625.2 li
276.12 625.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
357.6 635.76 mo
( )sh
grestore
142.05 685.3 mo
228.05 685.3 li
228.05 657.8 li
142.05 657.8 li
cp
0 0 0 .16553 cmyk
ef
142.05 685.3 mo
228.05 685.3 li
228.05 657.8 li
142.05 657.8 li
cp
0 0 0 1 cmyk
@
gsave
142.44 681.36 mo
227.639 681.36 li
227.639 661.8 li
142.44 661.8 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
165.24 669.36 mo
(species tree )
[3.24014 4.31749 4.07634 3.3607 1.92159 3.95572 3.24014 1.80095 2.75772 2.87828 3.95573 4.07632 
0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: HZPBAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIDZZ+Calibri-Bold gcheck setglobal} if
1 12896 437 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>PGIDZZ+Calibri-Bold AddT42Char 
PGIDZZ+Calibri-Bold /CharStrings get begin
/u 437 def
end
PGIDZZ+Calibri-Bold /Encoding get
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIDZZ+Calibri-Bold*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright 7{/.notdef}rp 
/one 8{/.notdef}rp /colon 6{/.notdef}rp /A /B 3{/.notdef}rp /F 
5{/.notdef}rp /L /M 6{/.notdef}rp /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /.notdef /x 24{/.notdef}rp /quoteleft /quoteright 
109{/.notdef}rp]
PGIDZZ+Calibri-Bold nf
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
160.68 679.08 mo
(reconstruction)
[2.87828 4.07634 3.3607 4.31744 4.1969 3.24013 2.75772 2.8783 4.3175 3.3607 2.75772 1.92159 
4.31743 0 ]xsh
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
209.282 679.08 mo
( )sh
287.75 683.05 mo
373.75 683.05 li
373.75 655.55 li
287.75 655.55 li
cp
0 0 0 .16553 cmyk
ef
287.75 683.05 mo
373.75 683.05 li
373.75 655.55 li
287.75 655.55 li
cp
0 0 0 1 cmyk
@
gsave
288.12 679.08 mo
373.32 679.08 li
373.32 659.519 li
288.12 659.519 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
310.92 667.08 mo
(species tree )
[3.24014 4.3175 4.07632 3.36072 1.92157 3.95572 3.24014 1.80093 2.75772 2.8783 3.95572 4.07635 
0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
306.36 676.92 mo
(reconstruction)
[2.8783 4.07632 3.36072 4.31741 4.1969 3.24014 2.75772 2.8783 4.3175 3.36072 2.75769 1.9216 
4.31741 0 ]xsh
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
354.962 676.92 mo
( )sh
119.4 720.1 mo
169.25 720.1 li
169.25 697.45 li
119.4 697.45 li
cp
0 0 0 0 cmyk
ef
119.4 720.1 mo
169.25 720.1 li
169.25 697.45 li
119.4 697.45 li
cp
0 0 0 1 cmyk
@
gsave
119.76 716.16 mo
168.84 716.16 li
168.84 701.4 li
119.76 701.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
127.44 711.84 mo
(ASTRAL)
[6.35898 5.03424 5.39856 5.99471 6.35898 0 ]xsh
grestore
gsave
119.76 716.16 mo
168.84 716.16 li
168.84 701.4 li
119.76 701.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
161.16 711.84 mo
( )sh
grestore
172 719.8 mo
221.85 719.8 li
221.85 697.15 li
172 697.15 li
cp
0 0 0 0 cmyk
ef
172 719.8 mo
221.85 719.8 li
221.85 697.15 li
172 697.15 li
cp
0 0 0 1 cmyk
@
gsave
172.44 715.8 mo
221.4 715.8 li
221.4 701.16 li
172.44 701.16 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
1 1220 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>PGIEAA+Calibri AddT42Char 
1 2550 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/D 24 def
/I 47 def
end
PGIEAA+Calibri /Encoding get
dup 68 /D put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period 3{/.notdef}rp /two 14{/.notdef}rp /A 2{/.notdef}rp /D /.notdef 
/F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
180.84 711.72 mo
(ASTRID)
[6.35898 5.03424 5.39856 5.99471 2.75999 0 ]xsh
grestore
gsave
172.44 715.8 mo
221.4 715.8 li
221.4 701.16 li
172.44 701.16 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
213.12 711.72 mo
( )sh
grestore
144.8 745.45 mo
194.65 745.45 li
194.65 722.8 li
144.8 722.8 li
cp
0 0 0 0 cmyk
ef
144.8 745.45 mo
194.65 745.45 li
194.65 722.8 li
144.8 722.8 li
cp
0 0 0 1 cmyk
@
gsave
145.2 741.48 mo
194.281 741.48 li
194.281 726.84 li
145.2 726.84 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
159.72 737.4 mo
(MRL)
[9.48331 5.99472 0 ]xsh
grestore
gsave
145.2 741.48 mo
194.281 741.48 li
194.281 726.84 li
145.2 726.84 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
179.76 737.4 mo
( )sh
grestore
450.25 600.35 mo
555.9 600.35 li
555.9 565.05 li
450.25 565.05 li
cp
0 0 0 0 cmyk
ef
450.25 600.35 mo
555.9 600.35 li
555.9 565.05 li
450.25 565.05 li
cp
0 0 0 1 cmyk
@
gsave
450.6 596.4 mo
555.48 596.4 li
555.48 569.04 li
450.6 569.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 1176 876 <00010001fee7030a05be00150008b11005002f2f3130170e0323222e0237
013e0333321e0207a8040d141d151921120406025d040d131e1519201204
05f10d0f0804070d130d067b0d0f0903070c140d>PGIEAA+Calibri AddT42Char 
1 1438 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/slash 876 def
/E 28 def
end
PGIEAA+Calibri /Encoding get
dup 47 /slash put
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash 2{/.notdef}rp /two 14{/.notdef}rp /A 2{/.notdef}rp /D 
/E /F /.notdef /H /I 2{/.notdef}rp /L /M 
2{/.notdef}rp /P /.notdef /R /S /T 3{/.notdef}rp /X 
8{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
466.92 579.36 mo
(FastTree/ExaML )
[5.03424 5.27716 4.31671 3.72055 5.39856 3.84192 5.39856 5.52002 4.31665 5.27722 4.80237 5.27716 
9.36188 4.68091 0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
461.88 592.92 mo
(concatenated tree)
[4.681 5.88425 5.76282 4.681 5.27716 3.59912 5.51999 5.76282 5.27716 3.72058 5.52002 5.76282 
2.39563 3.72058 3.84186 5.39862 0 ]xsh
544.084 592.92 mo
( )sh
2 lw
0 lc
1 lj
333.05 508.25 mo
500.604 564.414 li
0 0 0 1 cmyk
@
1 lc
0 lj
497.606 560.772 mo
500.604 564.414 li
496.017 565.513 li
@
1 lw
1 lj
238 577 mo
238 577.193 li
257.15 577.193 li
257.15 752.95 li
@
260.15 751.95 mo
257.15 757.95 li
254.15 751.95 li
cp
ef
275.7 577 mo
275.7 576.749 li
264.65 576.749 li
264.65 752.95 li
@
267.65 751.95 mo
264.65 757.95 li
261.65 751.95 li
cp
ef
232.7 746.65 mo
292.55 746.65 li
292.55 699.65 li
232.7 699.65 li
cp
0 0 0 .16553 cmyk
ef
.75 lw
0 lj
232.7 746.65 mo
292.55 746.65 li
292.55 699.65 li
232.7 699.65 li
cp
0 0 0 1 cmyk
@
gsave
233.16 742.68 mo
292.2 742.68 li
292.2 703.68 li
233.16 703.68 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
247.08 711.24 mo
(subselect )
[3.24014 4.31749 4.3175 3.11954 4.07632 1.92157 4.07635 3.36069 2.75772 0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
249.24 720.96 mo
(genes)
[3.84311 4.07634 4.3175 3.95572 0 ]xsh
268.673 720.96 mo
( )sh
270.482 720.96 mo
(& )
[5.63605 0 ]xsh
250.8 730.801 mo
(update )
[4.3175 4.3175 4.3175 3.95569 2.75772 4.07632 0 ]xsh
gsave
233.16 742.68 mo
292.2 742.68 li
292.2 703.68 li
233.16 703.68 li
cp
clp
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
241.32 740.52 mo
(species trees)
[3.24014 4.31749 4.07634 3.36072 1.92157 3.95572 3.24014 1.80093 2.75772 2.8783 3.95572 4.07632 
0 ]xsh
grestore
gsave
233.16 742.68 mo
292.2 742.68 li
292.2 703.68 li
233.16 703.68 li
cp
clp
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
284.04 740.52 mo
( )sh
grestore
203.65 796.3 mo
309.3 796.3 li
309.3 757.95 li
203.65 757.95 li
cp
0 0 0 0 cmyk
ef
203.65 796.3 mo
309.3 796.3 li
309.3 757.95 li
203.65 757.95 li
cp
0 0 0 1 cmyk
@
gsave
204 792.36 mo
308.88 792.36 li
308.88 762 li
204 762 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
237.6 772.32 mo
(updated)
[5.76282 5.7628 5.76282 5.27718 3.72055 5.52002 0 ]xsh
grestore
gsave
204 792.36 mo
308.88 792.36 li
308.88 762 li
204 762 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
275.16 772.32 mo
( )sh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
227.16 785.76 mo
(gene tree list)
[5.15561 5.52 5.76282 5.52 2.51711 3.72055 3.8419 5.39859 5.51999 2.51709 2.51718 2.51715 
4.31671 0 ]xsh
285.595 785.76 mo
( )sh
317.25 231.95 mo
391.8 231.95 li
391.8 221.5 li
317.25 221.5 li
cp
0 0 0 .281529 cmyk
ef
317.25 231.95 mo
391.8 231.95 li
391.8 221.5 li
317.25 221.5 li
cp
0 0 0 1 cmyk
@
gsave
317.64 230.76 mo
391.44 230.76 li
391.44 222.72 li
317.64 222.72 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
325.92 229.32 mo
(HybPhyloMaker)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
0 ]xsh
grestore
gsave
317.64 230.76 mo
391.44 230.76 li
391.44 222.72 li
317.64 222.72 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 5324 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/one 1005 def
end
PGIEAA+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two 14{/.notdef}rp /A 2{/.notdef}rp 
/D /E /F /.notdef /H /I 2{/.notdef}rp /L 
/M 2{/.notdef}rp /P /.notdef /R /S /T 3{/.notdef}rp 
/X 8{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
371.28 229.32 mo
(1.sh)
[3.48001 1.80264 2.76318 0 ]xsh
grestore
gsave
317.64 230.76 mo
391.44 230.76 li
391.44 222.72 li
317.64 222.72 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
383.04 229.32 mo
( )sh
grestore
317.35 351.2 mo
391.9 351.2 li
391.9 339.95 li
317.35 339.95 li
cp
0 0 0 .281529 cmyk
ef
317.35 351.2 mo
391.9 351.2 li
391.9 339.95 li
317.35 339.95 li
cp
0 0 0 1 cmyk
@
gsave
317.76 349.92 mo
391.56 349.92 li
391.56 341.16 li
317.76 341.16 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 6010 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/three 1007 def
end
PGIEAA+Calibri /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three 13{/.notdef}rp /A 
2{/.notdef}rp /D /E /F /.notdef /H /I 2{/.notdef}rp 
/L /M 2{/.notdef}rp /P /.notdef /R /S /T 
3{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
326.04 347.64 mo
(HybPhyloMaker3)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
317.76 349.92 mo
391.56 349.92 li
391.56 341.16 li
317.76 341.16 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
374.88 347.64 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
317.76 349.92 mo
391.56 349.92 li
391.56 341.16 li
317.76 341.16 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
383.16 347.64 mo
( )sh
grestore
317.8 428.7 mo
392.35 428.7 li
392.35 417.35 li
317.8 417.35 li
cp
0 0 0 .281529 cmyk
ef
317.8 428.7 mo
392.35 428.7 li
392.35 417.35 li
317.8 417.35 li
cp
0 0 0 1 cmyk
@
gsave
318.24 427.44 mo
391.92 427.44 li
391.92 418.56 li
318.24 418.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 6498 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/four 1008 def
end
PGIEAA+Calibri /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three /four 12{/.notdef}rp 
/A 2{/.notdef}rp /D /E /F /.notdef /H /I 
2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R /S 
/T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
326.52 425.04 mo
(HybPhyloMaker4)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
318.24 427.44 mo
391.92 427.44 li
391.92 418.56 li
318.24 418.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
375.36 425.04 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
318.24 427.44 mo
391.92 427.44 li
391.92 418.56 li
318.24 418.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
383.64 425.04 mo
( )sh
grestore
318.7 485.6 mo
393.25 485.6 li
393.25 475.25 li
318.7 475.25 li
cp
0 0 0 .281529 cmyk
ef
318.7 485.6 mo
393.25 485.6 li
393.25 475.25 li
318.7 475.25 li
cp
0 0 0 1 cmyk
@
gsave
319.08 484.32 mo
392.88 484.32 li
392.88 476.52 li
319.08 476.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 6892 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/five 1009 def
end
PGIEAA+Calibri /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three /four /five 
11{/.notdef}rp /A 2{/.notdef}rp /D /E /F /.notdef /H 
/I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef /R 
/S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
327.36 483.12 mo
(HybPhyloMaker5)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
319.08 484.32 mo
392.88 484.32 li
392.88 476.52 li
319.08 476.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
376.2 483.12 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
319.08 484.32 mo
392.88 484.32 li
392.88 476.52 li
319.08 476.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
384.48 483.12 mo
( )sh
grestore
320.35 544.2 mo
394.9 544.2 li
394.9 533.35 li
320.35 533.35 li
cp
0 0 0 .281529 cmyk
ef
320.35 544.2 mo
394.9 544.2 li
394.9 533.35 li
320.35 533.35 li
cp
0 0 0 1 cmyk
@
gsave
320.76 543 mo
394.56 543 li
394.56 534.599 li
320.76 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 4030 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>PGIEAA+Calibri AddT42Char 
2 7254 1010 <ffff006bffed03bd0520020603ca0000>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/six 1010 def
end
PGIEAA+Calibri /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three /four /five 
/six 10{/.notdef}rp /A 2{/.notdef}rp /D /E /F /.notdef 
/H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P /.notdef 
/R /S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
329.04 541.2 mo
(HybPhyloMaker6)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
320.76 543 mo
394.56 543 li
394.56 534.599 li
320.76 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
377.88 541.2 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
320.76 543 mo
394.56 543 li
394.56 534.599 li
320.76 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
386.16 541.2 mo
( )sh
grestore
361.35 618.1 mo
435.9 618.1 li
435.9 607.25 li
361.35 607.25 li
cp
0 0 0 .281529 cmyk
ef
361.35 618.1 mo
435.9 618.1 li
435.9 607.25 li
361.35 607.25 li
cp
0 0 0 1 cmyk
@
gsave
361.8 616.8 mo
435.48 616.8 li
435.48 608.52 li
361.8 608.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 7270 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/seven 1011 def
end
PGIEAA+Calibri /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three /four /five 
/six /seven 9{/.notdef}rp /A 2{/.notdef}rp /D /E /F 
/.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp /P 
/.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
370.08 615.12 mo
(HybPhyloMaker7)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
361.8 616.8 mo
435.48 616.8 li
435.48 608.52 li
361.8 608.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
418.92 615.12 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
361.8 616.8 mo
435.48 616.8 li
435.48 608.52 li
361.8 608.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
427.2 615.12 mo
( )sh
grestore
364.9 688.25 mo
453.05 688.25 li
453.05 677.4 li
364.9 677.4 li
cp
0 0 0 .281529 cmyk
ef
364.9 688.25 mo
453.05 688.25 li
453.05 677.4 li
364.9 677.4 li
cp
0 0 0 1 cmyk
@
gsave
365.28 687 mo
452.639 687 li
452.639 678.599 li
365.28 678.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 4378 972 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>PGIEAA+Calibri AddT42Char 
2 7588 1012 <ffff0052ffed03ba0521020603cc0000>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/eight 1012 def
end
PGIEAA+Calibri /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /.notdef /one /two /three /four /five 
/six /seven /eight 8{/.notdef}rp /A 2{/.notdef}rp /D /E 
/F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
375.36 685.2 mo
(HybPhyloMaker8abc)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 3.48004 3.48001 3.5983 0 ]xsh
grestore
gsave
365.28 687 mo
452.639 687 li
452.639 678.599 li
365.28 678.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
434.28 685.2 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
365.28 687 mo
452.639 687 li
452.639 678.599 li
365.28 678.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
442.44 685.2 mo
( )sh
grestore
297.9 719.5 mo
347.75 719.5 li
347.75 696.85 li
297.9 696.85 li
cp
0 0 0 0 cmyk
ef
297.9 719.5 mo
347.75 719.5 li
347.75 696.85 li
297.9 696.85 li
cp
0 0 0 1 cmyk
@
gsave
298.32 715.56 mo
347.4 715.56 li
347.4 700.8 li
298.32 700.8 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
306 711.24 mo
(ASTRAL)
[6.35898 5.03424 5.39856 5.99472 6.35898 0 ]xsh
grestore
gsave
298.32 715.56 mo
347.4 715.56 li
347.4 700.8 li
298.32 700.8 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
339.72 711.24 mo
( )sh
grestore
350.5 719.2 mo
400.35 719.2 li
400.35 696.55 li
350.5 696.55 li
cp
0 0 0 0 cmyk
ef
350.5 719.2 mo
400.35 719.2 li
400.35 696.55 li
350.5 696.55 li
cp
0 0 0 1 cmyk
@
gsave
350.88 715.2 mo
399.96 715.2 li
399.96 700.56 li
350.88 700.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
359.28 711.12 mo
(ASTRID)
[6.35898 5.03424 5.39856 5.99472 2.75998 0 ]xsh
grestore
gsave
350.88 715.2 mo
399.96 715.2 li
399.96 700.56 li
350.88 700.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
391.56 711.12 mo
( )sh
grestore
324.15 744.85 mo
374 744.85 li
374 722.2 li
324.15 722.2 li
cp
0 0 0 0 cmyk
ef
324.15 744.85 mo
374 744.85 li
374 722.2 li
324.15 722.2 li
cp
0 0 0 1 cmyk
@
gsave
324.6 740.88 mo
373.56 740.88 li
373.56 726.241 li
324.6 726.241 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
339.12 736.8 mo
(MRL)
[9.48331 5.99472 0 ]xsh
grestore
gsave
324.6 740.88 mo
373.56 740.88 li
373.56 726.241 li
324.6 726.241 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
359.16 736.8 mo
( )sh
grestore
189.25 183.9 mo
332.15 183.9 li
332.15 162.5 li
189.25 162.5 li
cp
0 0 0 0 cmyk
ef
189.25 183.9 mo
332.15 183.9 li
332.15 162.5 li
189.25 162.5 li
cp
0 0 0 1 cmyk
@
gsave
189.6 179.88 mo
331.8 179.88 li
331.8 166.56 li
189.6 166.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
219.48 176.88 mo
(renamed raw data)
[3.8419 5.52002 5.76282 5.27716 8.75467 5.52002 5.76282 2.51709 3.84192 5.27716 7.91562 2.51712 
5.76279 5.15573 3.72055 0 ]xsh
grestore
gsave
189.6 179.88 mo
331.8 179.88 li
331.8 166.56 li
189.6 166.56 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
301.8 176.88 mo
( )sh
grestore
202.15 154.5 mo
323.15 154.5 li
323.15 127 li
202.15 127 li
cp
0 0 0 .16553 cmyk
ef
202.15 154.5 mo
323.15 154.5 li
323.15 127 li
202.15 127 li
cp
0 0 0 1 cmyk
@
gsave
202.56 150.48 mo
322.8 150.48 li
322.8 131.04 li
202.56 131.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
234.48 138.6 mo
(data preparation)
[4.3175 3.96375 2.75772 3.96375 1.80095 4.31749 2.87828 4.07632 4.3175 3.84317 2.87827 3.96375 
2.75772 1.92157 4.31744 0 ]xsh
grestore
gsave
202.56 150.48 mo
322.8 150.48 li
322.8 131.04 li
202.56 131.04 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
290.76 138.6 mo
( )sh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
218.52 148.32 mo
(\()sh
220.924 148.32 mo
(download\), rename, move)
[4.19682 4.19682 5.75662 4.19682 1.80099 4.19682 3.84315 4.19682 2.39587 2.04216 1.80093 2.75772 
3.96371 4.19684 3.84317 6.48019 3.96371 2.04218 1.80093 6.48022 4.19681 3.6019 0 ]xsh
306.839 148.32 mo
( )sh
317 159.35 mo
394.9 159.35 li
394.9 148.9 li
317 148.9 li
cp
0 0 0 .281529 cmyk
ef
317 159.35 mo
394.9 159.35 li
394.9 148.9 li
317 148.9 li
cp
0 0 0 1 cmyk
@
gsave
317.4 158.16 mo
394.56 158.16 li
394.56 150.119 li
317.4 150.119 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 4966 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/zero 1004 def
end
PGIEAA+Calibri /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight 8{/.notdef}rp /A 2{/.notdef}rp /D /E 
/F /.notdef /H /I 2{/.notdef}rp /L /M 2{/.notdef}rp 
/P /.notdef /R /S /T 3{/.notdef}rp /X 8{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
325.68 156.72 mo
(HybPhyloMaker0a)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 3.48004 0 ]xsh
grestore
gsave
317.4 158.16 mo
394.56 158.16 li
394.56 150.119 li
317.4 150.119 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
377.88 156.72 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
317.4 158.16 mo
394.56 158.16 li
394.56 150.119 li
317.4 150.119 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
386.16 156.72 mo
( )sh
grestore
222.65 703.85 mo
297.2 703.85 li
297.2 693 li
222.65 693 li
cp
0 0 0 .281529 cmyk
ef
222.65 703.85 mo
297.2 703.85 li
297.2 693 li
222.65 693 li
cp
0 0 0 1 cmyk
@
gsave
223.08 702.6 mo
296.759 702.6 li
296.759 694.2 li
223.08 694.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 7604 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/nine 1013 def
end
PGIEAA+Calibri /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine 7{/.notdef}rp /A 2{/.notdef}rp /D 
/E /F /.notdef /H /I 2{/.notdef}rp /L /M 
2{/.notdef}rp /P /.notdef /R /S /T 3{/.notdef}rp /X 
8{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 133{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
231.36 700.8 mo
(HybPhyloMaker9)
[4.32217 3.11809 3.7166 3.59831 3.7166 3.1181 1.55907 3.71658 5.99948 3.36172 3.1181 3.47998 
2.51953 0 ]xsh
grestore
gsave
223.08 702.6 mo
296.759 702.6 li
296.759 694.2 li
223.08 694.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
280.2 700.8 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
223.08 702.6 mo
296.759 702.6 li
296.759 694.2 li
223.08 694.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
288.48 700.8 mo
( )sh
grestore
434.85 544.2 mo
513.6 544.2 li
513.6 533.35 li
434.85 533.35 li
cp
0 0 0 .281529 cmyk
ef
434.85 544.2 mo
513.6 544.2 li
513.6 533.35 li
434.85 533.35 li
cp
0 0 0 1 cmyk
@
gsave
435.24 543 mo
513.24 543 li
513.24 534.599 li
435.24 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
442.8 541.2 mo
(HybPhyloMaker8ef)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 3.48004 3.48001 0 ]xsh
grestore
gsave
435.24 543 mo
513.24 543 li
513.24 534.599 li
435.24 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
497.28 541.2 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
435.24 543 mo
513.24 543 li
513.24 534.599 li
435.24 534.599 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
505.56 541.2 mo
( )sh
grestore
359.9 110.65 mo
502.8 110.65 li
502.8 89.2499 li
359.9 89.2499 li
cp
0 0 0 0 cmyk
ef
359.9 110.65 mo
502.8 110.65 li
502.8 89.2499 li
359.9 89.2499 li
cp
0 0 0 1 cmyk
@
gsave
360.36 106.68 mo
502.44 106.68 li
502.44 93.239 li
360.36 93.239 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
381.24 103.56 mo
(exon probe sequences)
[5.52002 4.80237 5.88425 5.76282 2.51709 5.76282 3.72046 5.88425 5.76282 5.52002 2.39566 4.31671 
5.51999 5.76282 5.76282 5.52002 5.76279 4.55957 5.52002 0 ]xsh
grestore
gsave
360.36 106.68 mo
502.44 106.68 li
502.44 93.239 li
360.36 93.239 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
481.68 103.56 mo
( )sh
grestore
21.65 110.65 mo
164.55 110.65 li
164.55 89.2499 li
21.65 89.2499 li
cp
0 0 0 0 cmyk
ef
21.65 110.65 mo
164.55 110.65 li
164.55 89.2499 li
21.65 89.2499 li
cp
0 0 0 1 cmyk
@
gsave
22.08 106.68 mo
164.16 106.68 li
164.16 93.239 li
22.08 93.239 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
47.52 103.56 mo
(organellar reference)
[5.88424 3.84191 5.1556 5.27716 5.76281 5.52002 2.51716 2.51717 5.27717 3.8419 2.5171 3.72047 
5.52001 3.35608 5.52001 3.8419 5.52002 5.64137 4.681 0 ]xsh
grestore
gsave
22.08 106.68 mo
164.16 106.68 li
164.16 93.239 li
22.08 93.239 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
138.84 103.56 mo
( )sh
grestore
2 lw
0 lc
434.9 110.9 mo
434.9 277.695 li
324.934 277.695 li
@
1 lc
329.22 279.664 mo
324.934 277.695 li
328.582 274.705 li
@
395.75 194.6 mo
473.65 194.6 li
473.65 184.15 li
395.75 184.15 li
cp
0 0 0 .281529 cmyk
ef
.75 lw
395.75 194.6 mo
473.65 194.6 li
473.65 184.15 li
395.75 184.15 li
cp
0 0 0 1 cmyk
@
gsave
396.12 193.32 mo
473.281 193.32 li
473.281 185.4 li
396.12 185.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
404.28 192 mo
(HybPhyloMaker0b)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 3.59836 0 ]xsh
grestore
gsave
396.12 193.32 mo
473.281 193.32 li
473.281 185.4 li
396.12 185.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
456.84 192 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
396.12 193.32 mo
473.281 193.32 li
473.281 185.4 li
396.12 185.4 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
465.12 192 mo
( )sh
grestore
380.85 259.95 mo
491.55 259.95 li
491.55 238.55 li
380.85 238.55 li
cp
0 0 0 0 cmyk
ef
380.85 259.95 mo
491.55 259.95 li
491.55 238.55 li
380.85 238.55 li
cp
0 0 0 1 cmyk
@
gsave
381.24 255.96 mo
491.16 255.96 li
491.16 242.52 li
381.24 242.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
%ADOBeginSubsetFont: RYGAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PGIEAA+Calibri gcheck setglobal} if
2 632 858 <0001008c037501d40578001b0009b2061647003fcd31300115140e022322
2e0235343e0237373e03333216161407014c0c1824191924170b060e1711
89050c13191212170b0404467f1b2011060611201b1e342e2e18ce080a07
0403070c0800>PGIEAA+Calibri AddT42Char 
2 728 859 <0001002a037501730578001b0009b20b1747003fcd313001140e0207070e
0323222e02371335343e0233321e020173060e171189050d13191311170a
0104850b18241a1924170b05261f332f2d18ce070c070303070c0901137f
1a20120606122000>PGIEAA+Calibri AddT42Char 
PGIEAA+Calibri /CharStrings get begin
/quoteleft 858 def
/quoteright 859 def
end
PGIEAA+Calibri /Encoding get
dup 145 /quoteleft put
dup 146 /quoteright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PGIEAA+Calibri*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine 7{/.notdef}rp /A 2{/.notdef}rp /D 
/E /F /.notdef /H /I 2{/.notdef}rp /L /M 
2{/.notdef}rp /P /.notdef /R /S /T 3{/.notdef}rp /X 
8{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 22{/.notdef}rp /quoteleft /quoteright 109{/.notdef}rp]
PGIEAA+Calibri nf
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
395.28 252.84 mo
(\221pseudoreference\222)
[2.76001 5.76279 4.31671 5.52002 5.76282 5.76282 5.88425 3.84189 5.52002 3.23465 5.51999 3.84192 
5.52002 5.76282 4.55957 5.51999 0 ]xsh
grestore
gsave
381.24 255.96 mo
491.16 255.96 li
491.16 242.52 li
381.24 242.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
477 252.84 mo
( )sh
grestore
2 lw
0 lc
119.4 110.9 mo
119.4 277.749 li
200.91 277.749 li
@
1 lc
197.182 274.859 mo
200.91 277.749 li
196.679 279.834 li
@
16.3 336.1 mo
159.2 336.1 li
159.2 301.3 li
16.3 301.3 li
cp
0 0 0 0 cmyk
ef
.75 lw
16.3 336.1 mo
159.2 336.1 li
159.2 301.3 li
16.3 301.3 li
cp
0 0 0 1 cmyk
@
gsave
16.68 332.16 mo
158.76 332.16 li
158.76 305.28 li
16.68 305.28 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
40.68 315.6 mo
(organellar consensus )
[5.88424 3.84191 5.1556 5.27716 5.76281 5.52001 2.51716 2.51717 5.27717 3.84191 2.51709 4.55957 
5.88425 5.76281 4.31671 5.52001 5.76282 4.31671 5.7628 4.19528 0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
64.2 329.04 mo
(sequences)
[4.31671 5.52001 5.76281 5.76282 5.52001 5.76281 4.681 5.52002 0 ]xsh
111.241 329.04 mo
( )sh
2 lw
0 lc
202.9 284.35 mo
87.254 284.35 li
87.254 298.51 li
0 0 0 1 cmyk
@
1 lc
90.1482 294.786 mo
87.2542 298.511 li
85.1742 294.277 li
@
0 lc
1 lj
85.65 336 mo
85.697 370.85 li
@
1 lc
0 lj
88.1921 366.847 mo
85.6971 370.85 li
83.1921 366.854 li
@
13.9 406.7 mo
156.8 406.7 li
156.8 372.65 li
13.9 372.65 li
cp
0 0 0 0 cmyk
ef
gsave
13.92 403.08 mo
156.719 403.08 li
156.719 376.2 li
13.92 376.2 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
26.76 386.52 mo
(same process as in case of )
[4.31671 5.27716 8.87611 5.39857 2.5171 5.76281 3.84191 5.88424 4.55957 5.52001 4.31671 4.31671 
2.5171 5.15572 4.31671 2.51709 2.51717 5.76282 2.5171 4.68101 5.27716 4.19527 5.52001 2.39565 
5.88425 3.35606 0 ]xsh
grestore
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf
72.24 399.96 mo
(exons)
[5.52001 4.80238 5.88425 5.76281 0 ]xsh
98.4048 399.96 mo
( )sh
0 lc
92.95 778.3 mo
92.95 600.301 li
138.901 600.301 li
0 0 0 1 cmyk
@
1 lc
134.964 597.702 mo
138.901 600.3 li
134.84 602.7 li
@
0 lc
1 lj
422 778.4 mo
309.8 778.4 li
@
317.25 296.75 mo
391.8 296.75 li
391.8 286.3 li
317.25 286.3 li
cp
0 0 0 .281529 cmyk
ef
.75 lw
1 lc
0 lj
317.25 296.75 mo
391.8 296.75 li
391.8 286.3 li
317.25 286.3 li
cp
0 0 0 1 cmyk
@
gsave
317.64 295.56 mo
391.44 295.56 li
391.44 287.52 li
317.64 287.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
325.92 294.12 mo
(HybPhyloMaker2)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55905 3.71661 5.99948 3.36169 3.1181 3.48001 
2.5195 0 ]xsh
grestore
gsave
317.64 295.56 mo
391.44 295.56 li
391.44 287.52 li
317.64 287.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
374.76 294.12 mo
(.sh)
[1.80264 2.76315 0 ]xsh
grestore
gsave
317.64 295.56 mo
391.44 295.56 li
391.44 287.52 li
317.64 287.52 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
383.04 294.12 mo
( )sh
grestore
374.5 454.05 mo
495.5 454.05 li
495.5 436.35 li
374.5 436.35 li
cp
0 0 0 .16553 cmyk
ef
374.5 454.05 mo
495.5 454.05 li
495.5 436.35 li
374.5 436.35 li
cp
0 0 0 1 cmyk
@
gsave
374.88 450 mo
495.12 450 li
495.12 440.401 li
374.88 440.401 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIDZZ+Calibri-Bold*1 [8.04 0 0 -8.04 0 0 ]msf
398.88 447.96 mo
(correct reading frame)
[3.36072 4.31744 2.87827 2.8783 4.07632 3.36072 2.75772 1.68033 2.8783 4.07632 3.95572 4.3175 
1.92157 4.3175 3.84311 1.80093 2.39587 2.8783 3.96375 6.48026 0 ]xsh
grestore
gsave
374.88 450 mo
495.12 450 li
495.12 440.401 li
374.88 440.401 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [8.04 0 0 -8.04 0 0 ]msf
471 447.96 mo
( )sh
grestore
487.15 460.2 mo
564.8 460.2 li
564.8 448.85 li
487.15 448.85 li
cp
0 0 0 .281529 cmyk
ef
487.15 460.2 mo
564.8 460.2 li
564.8 448.85 li
487.15 448.85 li
cp
0 0 0 1 cmyk
@
gsave
487.56 459 mo
564.361 459 li
564.361 450.121 li
487.56 450.121 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
495.6 456.6 mo
(HybPhyloMaker4b)
[4.32217 3.1181 3.71658 3.59833 3.71658 3.1181 1.55908 3.71655 5.99951 3.36169 3.1181 3.47998 
2.51953 3.59833 0 ]xsh
grestore
gsave
487.56 459 mo
564.361 459 li
564.361 450.121 li
487.56 450.121 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
548.16 456.6 mo
(.sh)
[1.80261 2.76318 0 ]xsh
grestore
gsave
487.56 459 mo
564.361 459 li
564.361 450.121 li
487.56 450.121 li
cp
clp
.770352 .703883 .624414 .857847 cmyk
PGIEAA+Calibri*1 [6.96 0 0 -6.96 0 0 ]msf
556.44 456.6 mo
( )sh
grestore
2 lw
0 lc
1 lj
332.8 441.8 mo
372.5 441.8 li
@
1 lc
0 lj
368.5 439.3 mo
372.5 441.8 li
368.5 444.3 li
@
0 lc
1 lj
374.5 448.85 mo
334.8 448.85 li
@
1 lc
0 lj
338.8 451.35 mo
334.8 448.85 li
338.8 446.35 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/PGIDZZ+Calibri-Bold*1 uf
/PGIDZZ+Calibri-Bold uf
/HZPBAA+Calibri-Bold uf
/PGIEAA+Calibri*1 uf
/PGIEAA+Calibri uf
/RYGAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
